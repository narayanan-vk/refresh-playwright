{"name":"Refresh Playwright Test Execution Report","logo":null,"date":1746783704877,"dateH":"5/9/2025, 9:41:44 AM","duration":1730,"durationH":"1.7s","cwd":"/home/runner/work/refresh-playwright/refresh-playwright","outputFile":"/home/runner/work/refresh-playwright/refresh-playwright/monocart-report/index.html","outputDir":"/home/runner/work/refresh-playwright/refresh-playwright/monocart-report","metadata":{"ci":{"commitHref":"https://github.com/narayanan-vk/refresh-playwright/commit/3f7038809976f8f84e6abd171e0f9db5ff971a17","commitHash":"3f7038809976f8f84e6abd171e0f9db5ff971a17","buildHref":"https://github.com/narayanan-vk/refresh-playwright/actions/runs/14926084341"},"gitCommit":{"shortHash":"3f70388","hash":"3f7038809976f8f84e6abd171e0f9db5ff971a17","subject":"convert to pom with agent mode","body":"convert to pom with agent mode\n","author":{"name":"Narayanan Kangath","email":"Narayanan.Kangath@neudesic.com","time":1746783596000},"committer":{"name":"Narayanan Kangath","email":"Narayanan.Kangath@neudesic.com","time":1746783596000},"branch":"main"},"actualWorkers":16},"system":{"cpu":{"color":"#117DBB","count":4,"model":"AMD EPYC 7763 64-Core Processor","speed":0},"mem":{"color":"#8B12AE","total":16766414848},"arch":"x64","platform":"linux","release":"6.11.0-1013-azure","type":"Linux","version":"#13~24.04.1-Ubuntu SMP Fri Mar 28 23:43:34 UTC 2025","uptime":182.31,"hostname":"fv-az1915-589","pid":2147,"node":"22.15.0","v8":"12.4.254.21-node.24","timestampStart":1746783704877,"ticks":[{"cpu":{"percent":0},"mem":{"free":15512817664},"timestamp":1746783706571}],"workers":16,"jobs":[{"caseId":"916fac7e3406c160d5d8","parallelIndex":0,"workerIndex":0,"timestamp":1746783704981,"duration":1},{"caseId":"59469148166877ddbbaa","parallelIndex":1,"workerIndex":1,"timestamp":1746783704981,"duration":1},{"caseId":"d30629127fa1efd288b4","parallelIndex":2,"workerIndex":2,"timestamp":1746783704981,"duration":1},{"caseId":"ed68b02c3048908a91bc","parallelIndex":3,"workerIndex":3,"timestamp":1746783704981,"duration":1},{"caseId":"32e999ee07941d3cb5f7","parallelIndex":0,"workerIndex":0,"timestamp":1746783704982,"duration":1},{"caseId":"3be466936e7f507d9348","parallelIndex":1,"workerIndex":1,"timestamp":1746783704982,"duration":1},{"caseId":"b948023254f6e4af87b9","parallelIndex":2,"workerIndex":2,"timestamp":1746783704982,"duration":1},{"caseId":"a4e0a2a903772d5412c4","parallelIndex":3,"workerIndex":3,"timestamp":1746783704982,"duration":1},{"caseId":"33165c04f89f3551d19f","parallelIndex":0,"workerIndex":0,"timestamp":1746783704993,"duration":1},{"caseId":"fed246f052c9c5536586","parallelIndex":1,"workerIndex":1,"timestamp":1746783704993,"duration":1},{"caseId":"e8c9b4162e3427651b0c","parallelIndex":2,"workerIndex":2,"timestamp":1746783704993,"duration":1},{"caseId":"e5fbb855637a119ec0f9","parallelIndex":3,"workerIndex":3,"timestamp":1746783704993,"duration":1},{"caseId":"81f4609327245cb22be5","parallelIndex":0,"workerIndex":0,"timestamp":1746783704994,"duration":0},{"caseId":"47323b9dedca970683a9","parallelIndex":1,"workerIndex":1,"timestamp":1746783704994,"duration":1},{"caseId":"7c66bb5650990dc7d7ce","parallelIndex":3,"workerIndex":3,"timestamp":1746783704994,"duration":1},{"caseId":"dd44cacc282e9036bc4b","parallelIndex":2,"workerIndex":2,"timestamp":1746783704994,"duration":1},{"caseId":"dd44cacc282e9036bc4b","parallelIndex":0,"workerIndex":4,"timestamp":1746783704995,"duration":0},{"caseId":"4f9d8b8c5e580c9bc321","parallelIndex":0,"workerIndex":0,"timestamp":1746783705001,"duration":1},{"caseId":"e64d8c23501cabc87a14","parallelIndex":1,"workerIndex":1,"timestamp":1746783705001,"duration":0},{"caseId":"5fad9da48a03375303e5","parallelIndex":2,"workerIndex":2,"timestamp":1746783705001,"duration":0},{"caseId":"3020ad17fb3762a52348","parallelIndex":3,"workerIndex":3,"timestamp":1746783705001,"duration":0},{"caseId":"be9982ef083df7b846bb","parallelIndex":3,"workerIndex":3,"timestamp":1746783705001,"duration":1},{"caseId":"e327d66bef9f2965897f","parallelIndex":1,"workerIndex":1,"timestamp":1746783705001,"duration":1},{"caseId":"b1246efcb9815dcb9830","parallelIndex":2,"workerIndex":2,"timestamp":1746783705001,"duration":1},{"caseId":"f3afb01310c20b0296aa","parallelIndex":0,"workerIndex":0,"timestamp":1746783705002,"duration":0},{"caseId":"eaba86ca91161b7e46fe","parallelIndex":0,"workerIndex":0,"timestamp":1746783705013,"duration":0},{"caseId":"ccfae588ea46944472fa","parallelIndex":1,"workerIndex":1,"timestamp":1746783705013,"duration":1},{"caseId":"ccfae588ea46944472fa","parallelIndex":1,"workerIndex":4,"timestamp":1746783705014,"duration":0},{"caseId":"01b8ada359ccd6874988","parallelIndex":2,"workerIndex":2,"timestamp":1746783705013,"duration":1},{"caseId":"01b8ada359ccd6874988","parallelIndex":2,"workerIndex":5,"timestamp":1746783705014,"duration":0},{"caseId":"1aad7cfb6821778273c5","parallelIndex":3,"workerIndex":3,"timestamp":1746783705013,"duration":1},{"caseId":"1aad7cfb6821778273c5","parallelIndex":3,"workerIndex":6,"timestamp":1746783705014,"duration":0},{"caseId":"1cf5aa74928dd29dabbb","parallelIndex":0,"workerIndex":0,"timestamp":1746783705013,"duration":1},{"caseId":"1cf5aa74928dd29dabbb","parallelIndex":0,"workerIndex":7,"timestamp":1746783705014,"duration":0},{"caseId":"198a90c24813d7275225","parallelIndex":1,"workerIndex":8,"timestamp":1746783705014,"duration":0},{"caseId":"198a90c24813d7275225","parallelIndex":0,"workerIndex":11,"timestamp":1746783705014,"duration":0},{"caseId":"e59a62f29807f97b58e3","parallelIndex":3,"workerIndex":10,"timestamp":1746783705014,"duration":0},{"caseId":"06a7195bce00102b7f1e","parallelIndex":2,"workerIndex":9,"timestamp":1746783705014,"duration":0}],"cwd":"/home/runner/work/refresh-playwright/refresh-playwright","configFile":"src/configurations/merge-report.config.ts","playwright":"1.52.0","monocart":"2.9.18","testDir":"src/configurations/tests/e2e","outputFile":"monocart-report/index.html","outputDir":"monocart-report","timestampEnd":1746783706607},"artifacts":[],"trends":[{"date":1746517820948,"duration":1335,"tests":26,"failed":0,"flaky":0,"skipped":0,"passed":26,"steps":602,"suites":11,"projects":1,"files":2,"describes":10,"shards":0,"errors":0,"retries":0,"logs":0,"attachments":26,"artifacts":0},{"date":1746705388922,"duration":1132,"tests":26,"failed":0,"flaky":0,"skipped":0,"passed":26,"steps":610,"suites":11,"projects":1,"files":2,"describes":10,"shards":0,"errors":0,"retries":0,"logs":0,"attachments":26,"artifacts":0},{"date":1746707607722,"duration":1355,"tests":96,"failed":0,"flaky":0,"skipped":0,"passed":96,"steps":2076,"suites":35,"projects":3,"files":3,"describes":29,"shards":0,"errors":0,"retries":0,"logs":0,"attachments":96,"artifacts":0},{"date":1746712034242,"duration":1291,"tests":96,"failed":3,"flaky":0,"skipped":0,"passed":93,"steps":2087,"suites":35,"projects":3,"files":3,"describes":32,"shards":0,"errors":9,"retries":6,"logs":0,"attachments":21,"artifacts":0},{"date":1746721232559,"duration":1497,"tests":96,"failed":0,"flaky":0,"skipped":0,"passed":96,"steps":1986,"suites":35,"projects":3,"files":3,"describes":32,"shards":0,"errors":0,"retries":0,"logs":0,"attachments":0,"artifacts":0}],"columns":[{"id":"caseType","name":"","width":36,"sortable":false,"align":"center","formatter":"iconCaseType","detailed":false},{"id":"title","name":"Title","searchable":true,"width":350,"maxWidth":1230,"detailed":false},{"id":"type","name":"Type","width":50,"sortable":false,"align":"center","formatter":"iconType","detailed":false},{"id":"duration","name":"Duration","align":"right","sortAsc":false,"formatter":"duration","detailed":false},{"id":"errors","name":"Errors","width":60,"align":"center","comparer":"errors","formatter":"errors","detailed":false},{"id":"logs","name":"Logs","width":60,"align":"center","comparer":"logs","formatter":"logs","detailed":false},{"id":"annotations","name":"Annotations","width":100,"markdown":true,"searchable":true,"comparer":"annotations","formatter":"annotations","detailed":false},{"id":"attachments","name":"Attachments","width":100,"align":"center","formatter":"attachments","detailed":false},{"id":"status","name":"Status","align":"center","detailed":false},{"id":"expectedStatus","name":"Expected","align":"center","detailed":false},{"id":"outcome","name":"Outcome","align":"center","width":85,"detailed":false},{"id":"retry","name":"Retry","align":"center","width":50,"detailed":false},{"id":"location","name":"Location","classMap":"mcr-location","width":200,"maxWidth":1981,"detailed":false}],"rows":[{"id":"b51dc31ba092d0ab6173","title":"chromium e2e","type":"suite","suiteType":"project","caseNum":8,"subs":[{"id":"cb76ce3b178fa18f8a9c","title":"demo-svg-app.spec.ts","type":"suite","suiteType":"file","caseNum":6,"subs":[{"id":"916fac7e3406c160d5d8","title":"verify menu items","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:12:5","timestamps":[1746783704981,1746783704982],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":13,"stepFailed":0,"stepSubs":true,"subs":[{"id":"l1n8dzywikn4mcoto5p6","title":"Before Hooks","type":"step","stepType":"hook","duration":961,"location":"","subs":[{"id":"fiy4p74ulkoyvonw5o9u","title":"beforeEach hook","type":"step","stepType":"hook","duration":958,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:8:6","subs":[{"id":"h3fvbvotw755eyn3l70n","title":"fixture: browser","type":"step","stepType":"fixture","duration":189,"location":"","subs":[{"id":"rnjudftzog25oaivp0pt","title":"browserType.launch","type":"step","stepType":"pw:api","duration":180,"location":""}]},{"id":"zp99kjbq8k1osmzmshy5","title":"fixture: context","type":"step","stepType":"fixture","duration":64,"location":"","subs":[{"id":"l3g4gnuxtu809hjppjc2","title":"browser.newContext","type":"step","stepType":"pw:api","duration":19,"location":""}]},{"id":"gr9j1l8ubsjtxtimupeq","title":"fixture: page","type":"step","stepType":"fixture","duration":93,"location":"","subs":[{"id":"brwbsp4mg85568jxj8b9","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":90,"location":""}]},{"id":"fr2b4ab3990y0pqgrosx","title":"page.goto(https://demo.playwright.dev/svgomg)","type":"step","stepType":"pw:api","duration":583,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:9:14"}]}]},{"id":"ghktebj6xgsceivg30hq","title":"expect.toHaveText","type":"step","stepType":"expect","duration":108,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:13:42"},{"id":"sb0mos20sfrwwivt9o02","title":"After Hooks","type":"step","stepType":"hook","duration":199,"location":"","subs":[{"id":"e9ukejbfsmke6bgnjzf9","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"z04e8dnunhetxtv3tgxz","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"628a32079aee999bed32","title":"demo tests","type":"suite","suiteType":"describe","caseNum":4,"subs":[{"id":"59469148166877ddbbaa","title":"verify default global settings","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:26:7","timestamps":[1746783704981,1746783704982],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":19,"stepFailed":0,"stepSubs":true,"subs":[{"id":"d96uz0quxglx0xtnqdi6","title":"Before Hooks","type":"step","stepType":"hook","duration":1191,"location":"","subs":[{"id":"26s6zm9lp4qfjleemhtw","title":"beforeEach hook","type":"step","stepType":"hook","duration":948,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:8:6","subs":[{"id":"f86414u24kee1b5gqd8i","title":"fixture: browser","type":"step","stepType":"fixture","duration":261,"location":"","subs":[{"id":"o9d2nevn4l15ji332q5t","title":"browserType.launch","type":"step","stepType":"pw:api","duration":257,"location":""}]},{"id":"e3h2vnoz2dodrf90sgpu","title":"fixture: context","type":"step","stepType":"fixture","duration":67,"location":"","subs":[{"id":"b744ralwil851kmtgpxn","title":"browser.newContext","type":"step","stepType":"pw:api","duration":20,"location":""}]},{"id":"uyy33fj4gec0epvbfsdi","title":"fixture: page","type":"step","stepType":"fixture","duration":87,"location":"","subs":[{"id":"ltzu0rt9vfv5jf4lg5q7","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":84,"location":""}]},{"id":"ni1ccflvljbo5cbii8e5","title":"page.goto(https://demo.playwright.dev/svgomg)","type":"step","stepType":"pw:api","duration":514,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:9:14"}]},{"id":"v00qmemmg4r06hz2cnju","title":"beforeEach hook","type":"step","stepType":"hook","duration":241,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:22:8","subs":[{"id":"83aozobuqi5w4vulspjs","title":"locator.click(.menu-item >> text=Demo)","type":"step","stepType":"pw:api","duration":232,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:23:51"}]}]},{"id":"rb9a213qu6gmc5cfcquh","title":"expect.toHaveText","type":"step","stepType":"expect","duration":38,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:28:29"},{"id":"9zcoh6z2gvkarrp6ycvk","title":"expect.not.toBeChecked","type":"step","stepType":"expect","duration":19,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:36:60"},{"id":"o1ju12sks47xeozj2lj4","title":"expect.toBeChecked","type":"step","stepType":"expect","duration":32,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:37:58"},{"id":"6tbk537k8yywu01b0twd","title":"expect.not.toBeChecked","type":"step","stepType":"expect","duration":16,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:38:62"},{"id":"fu3yatq1n34gbm9j32ym","title":"expect.not.toBeChecked","type":"step","stepType":"expect","duration":12,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:39:56"},{"id":"98uodc7t244inz18fk5u","title":"After Hooks","type":"step","stepType":"hook","duration":190,"location":"","subs":[{"id":"twa07z2y5vh0htej0lcq","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"gtu4a5hmlua5qwcbkf7u","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"d30629127fa1efd288b4","title":"verify default features","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:42:7","timestamps":[1746783704981,1746783704982],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":23,"stepFailed":0,"stepSubs":true,"subs":[{"id":"jj39tb97kekar9y88m72","title":"Before Hooks","type":"step","stepType":"hook","duration":1154,"location":"","subs":[{"id":"ptvkc1g7mlyraf133bom","title":"beforeEach hook","type":"step","stepType":"hook","duration":875,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:8:6","subs":[{"id":"wj36a1yrw6ct84qt3pcc","title":"fixture: browser","type":"step","stepType":"fixture","duration":216,"location":"","subs":[{"id":"snhk8zk44ja79axbploh","title":"browserType.launch","type":"step","stepType":"pw:api","duration":209,"location":""}]},{"id":"unezqx7d1vbe3fkr5nns","title":"fixture: context","type":"step","stepType":"fixture","duration":24,"location":"","subs":[{"id":"hhrdxkad2clvd8oikmnf","title":"browser.newContext","type":"step","stepType":"pw:api","duration":9,"location":""}]},{"id":"krcbp05d78qsj8lmznpv","title":"fixture: page","type":"step","stepType":"fixture","duration":115,"location":"","subs":[{"id":"9csmsijbdd88gfmhe50t","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":112,"location":""}]},{"id":"dfyc96l5fnu8dczxo8j2","title":"page.goto(https://demo.playwright.dev/svgomg)","type":"step","stepType":"pw:api","duration":500,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:9:14"}]},{"id":"mji58utnf1kklp6gz414","title":"beforeEach hook","type":"step","stepType":"hook","duration":271,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:22:8","subs":[{"id":"am2jr42317ra6tc6q48s","title":"locator.click(.menu-item >> text=Demo)","type":"step","stepType":"pw:api","duration":262,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:23:51"}]}]},{"id":"o40at5rusnp3ge2d8x0l","title":"expect.toBeChecked","type":"step","stepType":"expect","duration":138,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:60:29","count":5},{"id":"k1ezksne2tklgdekp6bo","title":"expect.not.toBeChecked","type":"step","stepType":"expect","duration":78,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:65:33","count":4},{"id":"qmni1vld7hwtmk24qf3b","title":"After Hooks","type":"step","stepType":"hook","duration":326,"location":"","subs":[{"id":"9codl10tqtf80x69avr9","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"lwihqrwditsvya6vjgck","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"ed68b02c3048908a91bc","title":"reset settings","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:69:7","timestamps":[1746783704981,1746783704982],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":18,"stepFailed":0,"stepSubs":true,"subs":[{"id":"g7uxsh24piapltfz8ag9","title":"Before Hooks","type":"step","stepType":"hook","duration":1210,"location":"","subs":[{"id":"q29j69sha2i6mby602yh","title":"beforeEach hook","type":"step","stepType":"hook","duration":1034,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:8:6","subs":[{"id":"uf7ercftkf37yk8ga7nx","title":"fixture: browser","type":"step","stepType":"fixture","duration":223,"location":"","subs":[{"id":"gyf9cvtudmjxuhxiapuq","title":"browserType.launch","type":"step","stepType":"pw:api","duration":216,"location":""}]},{"id":"w5hbr5t6mstnfc87d0zj","title":"fixture: context","type":"step","stepType":"fixture","duration":75,"location":"","subs":[{"id":"evogzkjhgg2753hxvlqe","title":"browser.newContext","type":"step","stepType":"pw:api","duration":21,"location":""}]},{"id":"2tsdpasinoub76zcj9qh","title":"fixture: page","type":"step","stepType":"fixture","duration":79,"location":"","subs":[{"id":"v8je9ybe972bodqaakqg","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":70,"location":""}]},{"id":"hay3g9g3z84um398u7ph","title":"page.goto(https://demo.playwright.dev/svgomg)","type":"step","stepType":"pw:api","duration":626,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:9:14"}]},{"id":"x8vc5sxh2p3hj5vc1rqi","title":"beforeEach hook","type":"step","stepType":"hook","duration":169,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:22:8","subs":[{"id":"6newj584k1sbbl792jhi","title":"locator.click(.menu-item >> text=Demo)","type":"step","stepType":"pw:api","duration":166,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:23:51"}]}]},{"id":"clfi9dms27rnj6ee8xi9","title":"locator.click(.setting-item-toggle >> text=Show original)","type":"step","stepType":"pw:api","duration":767,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:71:31"},{"id":"v94o3rfemz50sfyki1q6","title":"expect.toBeChecked","type":"step","stepType":"expect","duration":73,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:72:39"},{"id":"18mhaiiag7jz4d0u4os2","title":"locator.click(button >> text=Reset all)","type":"step","stepType":"pw:api","duration":181,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:73:52"},{"id":"28ep4biggdtpl0lnm3iy","title":"expect.not.toBeChecked","type":"step","stepType":"expect","duration":85,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:74:43"},{"id":"d93av43gdciu5rl8mv40","title":"After Hooks","type":"step","stepType":"hook","duration":254,"location":"","subs":[{"id":"8mszmtgxf00mpn6veuc9","title":"fixture: page","type":"step","stepType":"fixture","duration":3,"location":""},{"id":"8ttbm691437ydwlnf93p","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"32e999ee07941d3cb5f7","title":"download result","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:77:7","timestamps":[1746783704982,1746783704983],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":18,"stepFailed":0,"stepSubs":true,"subs":[{"id":"1vcgs4ri64kny856dfqq","title":"Before Hooks","type":"step","stepType":"hook","duration":495,"location":"","subs":[{"id":"uhnf767exy1hmky4k48g","title":"beforeEach hook","type":"step","stepType":"hook","duration":286,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:8:6","subs":[{"id":"2ds9up6dkp9ydhpndgji","title":"fixture: context","type":"step","stepType":"fixture","duration":10,"location":"","subs":[{"id":"qrl2bu8honokyyjg675p","title":"browser.newContext","type":"step","stepType":"pw:api","duration":4,"location":""}]},{"id":"7xw4f006fxksv6ec72oc","title":"fixture: page","type":"step","stepType":"fixture","duration":64,"location":"","subs":[{"id":"938vb49vyaol2ukqrnoy","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":62,"location":""}]},{"id":"wrnpwvzjfufl6q8od386","title":"page.goto(https://demo.playwright.dev/svgomg)","type":"step","stepType":"pw:api","duration":205,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:9:14"}]},{"id":"birwckieri3vw2s881qt","title":"beforeEach hook","type":"step","stepType":"hook","duration":208,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:22:8","subs":[{"id":"6f3e02hksinezp387ruo","title":"locator.click(.menu-item >> text=Demo)","type":"step","stepType":"pw:api","duration":193,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:23:51"}]}]},{"id":"myqmjgznrffq3rhyno0g","title":"expect.toHaveAttribute","type":"step","stepType":"expect","duration":646,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:79:34"},{"id":"8od42qgo7irripcmvcny","title":"page.waitForEvent","type":"step","stepType":"pw:api","duration":230,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:81:12"},{"id":"4izbd85jpa04fwkjry4t","title":"locator.click(a[title=Download])","type":"step","stepType":"pw:api","duration":262,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:82:22"},{"id":"w29c6p5xiczds6ubui5g","title":"expect.toBe","type":"step","stepType":"expect","duration":0,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:84:42"},{"id":"nupi235z8nag4at48fl0","title":"download.path","type":"step","stepType":"pw:api","duration":2,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:85:51"},{"id":"6cdcbk7i03ffw478k03d","title":"expect.toContain","type":"step","stepType":"expect","duration":0,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:86:20"},{"id":"ynvi0nruz2unvf6yg1cb","title":"After Hooks","type":"step","stepType":"hook","duration":179,"location":"","subs":[{"id":"ouuc7ai08ngps9tx998w","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"bxrd4w5jejavf0ogxsuv","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:21:6"},{"id":"3be466936e7f507d9348","title":"open svg","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:90:5","timestamps":[1746783704982,1746783704983],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":16,"stepFailed":0,"stepSubs":true,"subs":[{"id":"ujk4gmfbfws9q2pmqm2k","title":"Before Hooks","type":"step","stepType":"hook","duration":383,"location":"","subs":[{"id":"hubjxxl1lsylww4r5h9q","title":"beforeEach hook","type":"step","stepType":"hook","duration":382,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:8:6","subs":[{"id":"rczgjdiil6qthk1yaw3o","title":"fixture: context","type":"step","stepType":"fixture","duration":26,"location":"","subs":[{"id":"2ww7px29rccv83vgtqpy","title":"browser.newContext","type":"step","stepType":"pw:api","duration":5,"location":""}]},{"id":"t85rdz7bnmry6fi1ka8a","title":"fixture: page","type":"step","stepType":"fixture","duration":117,"location":"","subs":[{"id":"8vwgm5m1ayv3oq54nonc","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":103,"location":""}]},{"id":"albk714vpa5s9p7ruooh","title":"page.goto(https://demo.playwright.dev/svgomg)","type":"step","stepType":"pw:api","duration":228,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:9:14"}]}]},{"id":"5qay7jvwnzcmuuht2izd","title":"page.waitForEvent","type":"step","stepType":"pw:api","duration":241,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:93:10"},{"id":"yf97etc1d26fhrknn1ac","title":"page.click(text=Open SVG)","type":"step","stepType":"pw:api","duration":263,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:94:10"},{"id":"12v0po2ca1aoz63s7wee","title":"fileChooser.setFiles","type":"step","stepType":"pw:api","duration":83,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:98:21"},{"id":"ris1h6vby3x3nz5upgxs","title":"fileChooser.setFiles","type":"step","stepType":"pw:api","duration":72,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:98:3"},{"id":"h97jnz1nl3ct2ejxe5hr","title":"locator.evaluate(.svg-frame >> internal:control=enter-frame >> svg)","type":"step","stepType":"pw:api","duration":388,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:105:71"},{"id":"2pjteynsuq5ys1nnjmlo","title":"expect.toMatch","type":"step","stepType":"expect","duration":5,"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:106:18"},{"id":"5gj57pajhpuw3fp67v7m","title":"After Hooks","type":"step","stepType":"hook","duration":157,"location":"","subs":[{"id":"5z9foz6lctbnaowiegld","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"0oa8ry1cbdrmrh95lzmm","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-svg-app.spec.ts:0:0"},{"id":"09035403a66b012a0c1a","title":"demo-todo-app.spec.ts","type":"suite","suiteType":"file","caseNum":2,"subs":[{"id":"dfe50620cabea8d9afd5","title":"New Todo","type":"suite","suiteType":"describe","caseNum":2,"subs":[{"id":"b948023254f6e4af87b9","title":"should allow me to add todo items","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:19:7","timestamps":[1746783704982,1746783704983],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":21,"stepFailed":0,"stepSubs":true,"subs":[{"id":"o000bfpohjnywu3axx1t","title":"Before Hooks","type":"step","stepType":"hook","duration":628,"location":"","subs":[{"id":"2w8m8oawexvjc823xabg","title":"beforeEach hook","type":"step","stepType":"hook","duration":627,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"7thhwgryvxsrlhgntcc5","title":"fixture: context","type":"step","stepType":"fixture","duration":10,"location":"","subs":[{"id":"qg8jlay9ijyl14b10aiq","title":"browser.newContext","type":"step","stepType":"pw:api","duration":4,"location":""}]},{"id":"pbagu6a112l9kns3lc6b","title":"fixture: page","type":"step","stepType":"fixture","duration":111,"location":"","subs":[{"id":"o0f1y86td5s1dlr4b2e8","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":101,"location":""}]},{"id":"8svn9p2kfcp3q2mv78lg","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":498,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"rzf4e3yl2f3evocceikt","title":"Create 1st todo.","type":"step","stepType":"test.step","duration":167,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:22:16","subs":[{"id":"2i73l6iynrvxbvry1u0v","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":92,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"gssstwlgf0dmf2ij954b","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":68,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"}]},{"id":"x5u33ady6wkaxt5cnhb1","title":"Make sure the list only has one todo item.","type":"step","stepType":"test.step","duration":35,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:26:16","subs":[{"id":"gvjb2vzka01uzklbguv1","title":"expect.toHaveText","type":"step","stepType":"expect","duration":34,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"}]},{"id":"0wu44hg1896yr0dl6ypc","title":"Create 2nd todo.","type":"step","stepType":"test.step","duration":140,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:30:16","subs":[{"id":"bfozyi6pc26g7o960jbc","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":76,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"53bbjthao02f8x8tq40z","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":54,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"}]},{"id":"1ft7nwecren7y502jfkv","title":"Make sure the list now has two todo items.","type":"step","stepType":"test.step","duration":36,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:34:16","subs":[{"id":"vb09trf7wpay3ezafutt","title":"expect.toHaveText","type":"step","stepType":"expect","duration":35,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"}]},{"id":"sgoun4d6q7lb8a8ajvv9","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"},{"id":"0yzs0ouywo3n1esek2ye","title":"After Hooks","type":"step","stepType":"hook","duration":146,"location":"","subs":[{"id":"0qfaocbnwcvy4y7q0bgq","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"gdr7vino1797jpzh70ph","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"a4e0a2a903772d5412c4","title":"should clear text input field when an item is added","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:41:7","timestamps":[1746783704982,1746783704983],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":14,"stepFailed":0,"stepSubs":true,"subs":[{"id":"stqv68h30m7tnajdu29c","title":"Before Hooks","type":"step","stepType":"hook","duration":377,"location":"","subs":[{"id":"bwxh1otus7l0i7up9vod","title":"beforeEach hook","type":"step","stepType":"hook","duration":376,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"d4hcawniezd0aogtf3to","title":"fixture: context","type":"step","stepType":"fixture","duration":19,"location":"","subs":[{"id":"fyby0a6r1jqbrnxohghw","title":"browser.newContext","type":"step","stepType":"pw:api","duration":4,"location":""}]},{"id":"63vpcs1x0wtj2e2lvvz6","title":"fixture: page","type":"step","stepType":"fixture","duration":92,"location":"","subs":[{"id":"m1ipbufhtqbttx2gk91l","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":90,"location":""}]},{"id":"bgotmwdxt7occ16khfr1","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":255,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"imnxv38fsc787nrzo811","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"oagbdmriem063gk2rrpy","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":22,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"v0vegqnp91f10sc0s7r8","title":"expect.toBeEmpty","type":"step","stepType":"expect","duration":11,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:34:39"},{"id":"5p3wpwno5c131yy1um3s","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":12,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"},{"id":"1i8gfxjcwga9svwm29d7","title":"After Hooks","type":"step","stepType":"hook","duration":84,"location":"","subs":[{"id":"sfwzr5c7jtfmsjyqd2s7","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"3ji5n1ilz5riewqyyub5","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:18:6"}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:0:0"}]},{"id":"b51dc31ba092d0ab6173","title":"chromium e2e","type":"suite","suiteType":"project","caseNum":8,"subs":[{"id":"09035403a66b012a0c1a","title":"demo-todo-app.spec.ts","type":"suite","suiteType":"file","caseNum":8,"subs":[{"id":"dfe50620cabea8d9afd5","title":"New Todo","type":"suite","suiteType":"describe","caseNum":1,"subs":[{"id":"33165c04f89f3551d19f","title":"should append new items to the bottom of the list","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:48:7","timestamps":[1746783704993,1746783704994],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":21,"stepFailed":0,"stepSubs":true,"subs":[{"id":"b4kvjgals81pjuri8n3y","title":"Before Hooks","type":"step","stepType":"hook","duration":790,"location":"","subs":[{"id":"sjiumlm0co6e32s0z614","title":"beforeEach hook","type":"step","stepType":"hook","duration":788,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"y9xjajjpg2xx5f9np9pk","title":"fixture: browser","type":"step","stepType":"fixture","duration":215,"location":"","subs":[{"id":"ljfafb8y1l61k61kvzw7","title":"browserType.launch","type":"step","stepType":"pw:api","duration":211,"location":""}]},{"id":"x3q16n8jxjlocmkbtopd","title":"fixture: context","type":"step","stepType":"fixture","duration":56,"location":"","subs":[{"id":"f9udxlvjuf4lxmj6rncd","title":"browser.newContext","type":"step","stepType":"pw:api","duration":30,"location":""}]},{"id":"eel9reokb3h5k06an2c1","title":"fixture: page","type":"step","stepType":"fixture","duration":117,"location":"","subs":[{"id":"ogwijn11zzd7vr4glsfm","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":113,"location":""}]},{"id":"p8bs2yz9p7v1flaalgve","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":380,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"bgzwe6q6zhny1drdcoex","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":65,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"3082adhch7qavfjv8ifm","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":52,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"6l3srww0rqvgwx05i3sf","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"orgodw2fh8iqunsrkf2r","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":41,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"44lrfp5sq3fb81ozd85a","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":44,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"osqz5dbpt699rz6lyise","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":39,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"1759502t20llws3u3go4","title":"expect.toContainText","type":"step","stepType":"expect","duration":24,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:44:34"},{"id":"zzkxwtkvrk3e1ydiy5ui","title":"expect.toHaveText","type":"step","stepType":"expect","duration":11,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"fgcyo6902td9al50sx0n","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":20,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"},{"id":"adfwf8qoppvwm6a5yya0","title":"After Hooks","type":"step","stepType":"hook","duration":159,"location":"","subs":[{"id":"779ghquxbwzg0bfgpxh8","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"fwzf3co0vdhs38lz4fth","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:18:6"},{"id":"29cf17c288dc8a54a26a","title":"Mark all as completed","type":"suite","suiteType":"describe","caseNum":3,"subs":[{"id":"fed246f052c9c5536586","title":"should allow me to mark all items as completed","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:68:7","timestamps":[1746783704993,1746783704994],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":25,"stepFailed":0,"stepSubs":true,"subs":[{"id":"dmry63bjet50ta3nvflg","title":"Before Hooks","type":"step","stepType":"hook","duration":1081,"location":"","subs":[{"id":"jtzpueysr7b98bg9kgjy","title":"beforeEach hook","type":"step","stepType":"hook","duration":716,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"qnej48kk11s3i49kw60d","title":"fixture: browser","type":"step","stepType":"fixture","duration":203,"location":"","subs":[{"id":"xw4czb7vyk6v2oomx0ko","title":"browserType.launch","type":"step","stepType":"pw:api","duration":198,"location":""}]},{"id":"bxmdnln4e4y7ci5il1aj","title":"fixture: context","type":"step","stepType":"fixture","duration":60,"location":"","subs":[{"id":"nf6ytjwbflphsgmqt0o9","title":"browser.newContext","type":"step","stepType":"pw:api","duration":20,"location":""}]},{"id":"4v67fdez23y21w9u66gp","title":"fixture: page","type":"step","stepType":"fixture","duration":104,"location":"","subs":[{"id":"1hzw2sat49ilcfoqu5su","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":95,"location":""}]},{"id":"4mwhsfzsv9umo0ok31pm","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":322,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"cxjxm7aj3p8xsqjgbm6i","title":"beforeEach hook","type":"step","stepType":"hook","duration":362,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:58:8","subs":[{"id":"v2qa7cp046o90ptfc0sn","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":71,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"5c8s8iv18ews81qt5pd5","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":53,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"08sj2sbnxw36dendbeds","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":40,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"u6xvr034vwywa90g712b","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":53,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"u6fkeuw9rosaby04reek","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":45,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"ejsjwbwbuxwj4bsgbsv1","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":46,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ibhcmdrt29697600cfv2","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":35,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"2d7zrbaaaz7133qabw22","title":"locator.getByLabel('Mark all as complete').check","type":"step","stepType":"pw:api","duration":51,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:48:34"},{"id":"2s7lfr0hcpx52iixanmg","title":"expect.toHaveClass","type":"step","stepType":"expect","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:56:34"},{"id":"c787kxkz2ggb9qf9rv8u","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":13,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"},{"id":"iohjacj3v8xcoe0d6jvi","title":"After Hooks","type":"step","stepType":"hook","duration":209,"location":"","subs":[{"id":"c4x8hmdfdt3s6v4c6uid","title":"afterEach hook","type":"step","stepType":"hook","duration":19,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:64:8","subs":[{"id":"25du48c0bj7fyqgsqg4j","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":14,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]},{"id":"dj1u9wdl3yqckf81i507","title":"fixture: page","type":"step","stepType":"fixture","duration":1,"location":""},{"id":"wu14c35gi43kbkeeici3","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"e8c9b4162e3427651b0c","title":"should allow me to clear the complete state of all items","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:75:7","timestamps":[1746783704993,1746783704994],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":25,"stepFailed":0,"stepSubs":true,"subs":[{"id":"722bs7fvk0s5pi371t8h","title":"Before Hooks","type":"step","stepType":"hook","duration":1270,"location":"","subs":[{"id":"34gq8jwmxy2p4ikky0xq","title":"beforeEach hook","type":"step","stepType":"hook","duration":874,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"rpxyeqyt0tsbl68e866x","title":"fixture: browser","type":"step","stepType":"fixture","duration":301,"location":"","subs":[{"id":"hq4tv5wfqrbgwikh2d6o","title":"browserType.launch","type":"step","stepType":"pw:api","duration":291,"location":""}]},{"id":"reqqejlw413c0rd53227","title":"fixture: context","type":"step","stepType":"fixture","duration":23,"location":"","subs":[{"id":"jsuf8tz2xltxmloqufum","title":"browser.newContext","type":"step","stepType":"pw:api","duration":10,"location":""}]},{"id":"5h7hdttsltf5hj8iya1b","title":"fixture: page","type":"step","stepType":"fixture","duration":120,"location":"","subs":[{"id":"u68458qdu0nju6xnzsnv","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":118,"location":""}]},{"id":"50q6pqwy58ojclyetmp2","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":397,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"8wvygvp24msbrggk1oab","title":"beforeEach hook","type":"step","stepType":"hook","duration":392,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:58:8","subs":[{"id":"652fdvx9w6uilw95697o","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":110,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"3lewf267hdx0zsc399qz","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":57,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"2iekuzfkm0zftbjf1bsv","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"nkp7ihkowt2gcllukeyx","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":37,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"pc2aduypeyacid6g0sfb","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":40,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"xln38akoacbh54yb8a24","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":49,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"wdqkja1cijujtjl8s77m","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":34,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"ua2bo9s8i789de2g5iy4","title":"locator.getByLabel('Mark all as complete').check","type":"step","stepType":"pw:api","duration":75,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:48:34"},{"id":"4uq7lel35gxvxrjmg19v","title":"locator.getByLabel('Mark all as complete').uncheck","type":"step","stepType":"pw:api","duration":144,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:52:34"},{"id":"rp5gv1oe9p9xl0su6d7t","title":"expect.toHaveClass","type":"step","stepType":"expect","duration":21,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:60:34"},{"id":"d7y5ye0rmjcphg1c4i7c","title":"After Hooks","type":"step","stepType":"hook","duration":192,"location":"","subs":[{"id":"wse9k223jg0rpghqkjv1","title":"afterEach hook","type":"step","stepType":"hook","duration":16,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:64:8","subs":[{"id":"d95rw76gihx5fwfs0mqo","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":11,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]},{"id":"d560r0vqw4yf1exe1gsr","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"beifsi5z809trbq553sx","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"e5fbb855637a119ec0f9","title":"complete all checkbox should update state when items are completed / cleared","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:82:7","timestamps":[1746783704993,1746783704994],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":30,"stepFailed":0,"stepSubs":true,"subs":[{"id":"cyuqys902f1cfv3xsv24","title":"Before Hooks","type":"step","stepType":"hook","duration":1089,"location":"","subs":[{"id":"wg0cntelekle81oudg5f","title":"beforeEach hook","type":"step","stepType":"hook","duration":750,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"q0um1z28qmfhxyb0s8x3","title":"fixture: browser","type":"step","stepType":"fixture","duration":209,"location":"","subs":[{"id":"527oxghietd36tczih7e","title":"browserType.launch","type":"step","stepType":"pw:api","duration":202,"location":""}]},{"id":"ykjszap6et1q92u1cynp","title":"fixture: context","type":"step","stepType":"fixture","duration":30,"location":"","subs":[{"id":"7lyrpbo77lnpisnz9jnd","title":"browser.newContext","type":"step","stepType":"pw:api","duration":8,"location":""}]},{"id":"2vt6ddyy0xfiud96aqyg","title":"fixture: page","type":"step","stepType":"fixture","duration":89,"location":"","subs":[{"id":"6td302z6dmhpgeosmgoc","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":86,"location":""}]},{"id":"7pqjsm76jyj7xbk9g6v1","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":406,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"mah290k9r8s3bio7tfbt","title":"beforeEach hook","type":"step","stepType":"hook","duration":337,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:58:8","subs":[{"id":"lj98mxdpzf514hu8awrn","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":61,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"3l1x7eb09gnuzqtsr3xp","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":46,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"rsjfbt9zndxv160riwih","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"f1wbms24upwvh40693h0","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":52,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"phni7hapdtnemzuonkzr","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"7qzqpoier9juc9g1ham4","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":39,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"nhik62wh2t9y3p2b26k3","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"2fupw9cwfpqcydp3fvtz","title":"locator.getByLabel('Mark all as complete').check","type":"step","stepType":"pw:api","duration":67,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:48:34"},{"id":"tz5139ic6sgr3f8tit0r","title":"expect.toBeChecked","type":"step","stepType":"expect","duration":40,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:84:42"},{"id":"o9dtut9757ae2xnjmmqb","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":16,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"},{"id":"d4iqf1zuexvv2jt39ht3","title":"locator.getByTestId('todo-item').first().getByRole('checkbox').uncheck","type":"step","stepType":"pw:api","duration":93,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:70:38"},{"id":"vcuncnaw17dqa2a9phei","title":"expect.not.toBeChecked","type":"step","stepType":"expect","duration":25,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:88:46"},{"id":"o63yiz44xbmmcujhn4qb","title":"locator.getByTestId('todo-item').first().getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":95,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"v1p3eyvaf0frw5fzqpyb","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":7,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"},{"id":"weu2embq0w4xvqa1yoac","title":"expect.toBeChecked","type":"step","stepType":"expect","duration":37,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:84:42"},{"id":"t584of94bsm3y46g75xg","title":"After Hooks","type":"step","stepType":"hook","duration":218,"location":"","subs":[{"id":"ft7bzfcc9z15rpbpe13a","title":"afterEach hook","type":"step","stepType":"hook","duration":34,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:64:8","subs":[{"id":"xlydyh6zoqe8ohdjyiyp","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":26,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]},{"id":"yaub69zy3gpcl4l6i99c","title":"fixture: page","type":"step","stepType":"fixture","duration":2,"location":""},{"id":"iefrd2l354mmw21l6fd0","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:57:6"},{"id":"385370b11f06ff25740c","title":"Item","type":"suite","suiteType":"describe","caseNum":3,"subs":[{"id":"81f4609327245cb22be5","title":"should allow me to mark items as complete","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:98:7","timestamps":[1746783704994,1746783704994],"duration":0,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":20,"stepFailed":0,"stepSubs":true,"subs":[{"id":"id3j9wuu4bykkftf9kyb","title":"Before Hooks","type":"step","stepType":"hook","duration":409,"location":"","subs":[{"id":"99unhw9dkwdixy5w3kc1","title":"beforeEach hook","type":"step","stepType":"hook","duration":407,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"vb1ra7z9fvf32t9lwrt7","title":"fixture: context","type":"step","stepType":"fixture","duration":46,"location":"","subs":[{"id":"0xwxrmyh2cnv8usg0dnp","title":"browser.newContext","type":"step","stepType":"pw:api","duration":13,"location":""}]},{"id":"s8zuc1rol9rnndtgj7kt","title":"fixture: page","type":"step","stepType":"fixture","duration":67,"location":"","subs":[{"id":"ss278nqved3uz74kxpxm","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":65,"location":""}]},{"id":"9zkhczvty883gv1e1lr9","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":286,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"vn504028srnr2rlnrhr2","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":77,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"nzddb5fmkm7bz47frcge","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":53,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"eliiluicxj621s3uitqh","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":28,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"fp2ce6favugcg8owckhm","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":32,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"7hgwzzzo1spq89wn5t5y","title":"locator.getByTestId('todo-item').first().getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":71,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"tx6cgghg185kkbdws3dw","title":"expect.toHaveClass","type":"step","stepType":"expect","duration":21,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:75:24"},{"id":"chxijjoct1t7zqxn2d93","title":"expect.not.toHaveClass","type":"step","stepType":"expect","duration":31,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:80:28"},{"id":"1o16vorqm7gyjopyre6w","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":84,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"felj905fsuh1bzfs7atq","title":"expect.toHaveClass","type":"step","stepType":"expect","duration":30,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:75:24","count":2},{"id":"ke90us05dn7edr9wz9ci","title":"After Hooks","type":"step","stepType":"hook","duration":185,"location":"","subs":[{"id":"9kyo0mmsttoswf8bukoj","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"ats79e4jl2vube5wu2ln","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"47323b9dedca970683a9","title":"should allow me to un-mark items as complete","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:113:7","timestamps":[1746783704994,1746783704995],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":22,"stepFailed":0,"stepSubs":true,"subs":[{"id":"tkgqw6a0hw40vh84jjnr","title":"Before Hooks","type":"step","stepType":"hook","duration":434,"location":"","subs":[{"id":"3panc7zixmqpwqdj953d","title":"beforeEach hook","type":"step","stepType":"hook","duration":434,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"tg7gjcmpsv5f0umh8100","title":"fixture: context","type":"step","stepType":"fixture","duration":11,"location":"","subs":[{"id":"7m9nitet4nisaqe4qvja","title":"browser.newContext","type":"step","stepType":"pw:api","duration":4,"location":""}]},{"id":"11kmjiqce6apidnnl4zk","title":"fixture: page","type":"step","stepType":"fixture","duration":86,"location":"","subs":[{"id":"z018xxn6u3anom8o9enr","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":80,"location":""}]},{"id":"p7wc5c0tyabgx2ijci1i","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":333,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"kxjghkfabswq4mfqy10o","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":65,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"bj2kjdxf7gnc0mg7nkc8","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":76,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"n1raq3q5c5ae99opq2hs","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":35,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"204ir11gaeqpvi9mrit7","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":69,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ne9wldtklpao4r583e45","title":"locator.getByTestId('todo-item').first().getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":45,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"ylm7a7hrp0x47p1gasxv","title":"expect.toHaveClass","type":"step","stepType":"expect","duration":15,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:75:24"},{"id":"xv7s13vp6ly0v802nmnh","title":"expect.not.toHaveClass","type":"step","stepType":"expect","duration":17,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:80:28"},{"id":"6bj5faep7y97nizzccxx","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":35,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"},{"id":"fugt3w3ljxbl5asbpz4d","title":"locator.getByTestId('todo-item').first().getByRole('checkbox').uncheck","type":"step","stepType":"pw:api","duration":85,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:70:38"},{"id":"pd455y5edoqxhfe27bpw","title":"expect.not.toHaveClass","type":"step","stepType":"expect","duration":31,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:80:28","count":2},{"id":"f8eix6l32941yjxv98al","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":23,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"},{"id":"mldf6nwkxytjudj8dawt","title":"After Hooks","type":"step","stepType":"hook","duration":151,"location":"","subs":[{"id":"h1swdxgpaah5h0xkuek1","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"sdk8o9rs6ekbkc5gakx6","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"7c66bb5650990dc7d7ce","title":"should allow me to edit an item","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:129:7","timestamps":[1746783704994,1746783704995],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":21,"stepFailed":0,"stepSubs":true,"subs":[{"id":"3f0hfoytyxdwkrd7fzgj","title":"Before Hooks","type":"step","stepType":"hook","duration":449,"location":"","subs":[{"id":"5kzqo5e98irnjxwpaaxs","title":"beforeEach hook","type":"step","stepType":"hook","duration":449,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"ofezckc2mc1mcvnsmuo2","title":"fixture: context","type":"step","stepType":"fixture","duration":11,"location":"","subs":[{"id":"cr0jz9mcme21eovbok85","title":"browser.newContext","type":"step","stepType":"pw:api","duration":3,"location":""}]},{"id":"klmhidlx5bcfqst3gmxt","title":"fixture: page","type":"step","stepType":"fixture","duration":52,"location":"","subs":[{"id":"nmobsxccwr3hwn0vcdnx","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":51,"location":""}]},{"id":"g8na26i0bvumz638brgw","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":376,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"a7dgcn0o5tsqeazqmq3a","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":57,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"2cb4plbj5mikgb3so47l","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":45,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"yomy34s83qzhx6c9xf00","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":41,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"z1jvjzuurntms3hgp377","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":56,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"mluoem6w39e21w59k1f5","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":24,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"n4jl0onez8nes9bsnug9","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"mrg7lqixv8j66zf2z13o","title":"locator.getByTestId('todo-item').nth(1).dblclick","type":"step","stepType":"pw:api","duration":52,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:93:16"},{"id":"1uj548hg7p6jrgxdyipb","title":"locator.fill(buy some sausages)","type":"step","stepType":"pw:api","duration":21,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:94:55"},{"id":"hr9tc7u32u6ergqz9xej","title":"locator.getByTestId('todo-item').nth(1).getByRole('textbox', { name: 'Edit' }).press(Enter)","type":"step","stepType":"pw:api","duration":24,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:95:55"},{"id":"73um541gu02duvxgc6f7","title":"expect.toHaveText","type":"step","stepType":"expect","duration":6,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"cjl4jn20m2obmvedsuxh","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":12,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:296:21"},{"id":"zmvlboch1jutdmh156kz","title":"After Hooks","type":"step","stepType":"hook","duration":91,"location":"","subs":[{"id":"cbko0rlv8wp70q9zkr0i","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"b24kybxttg4mam0l7m5x","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:97:6"},{"id":"08ce7a1b73060ffc64df","title":"Editing","type":"suite","suiteType":"describe","caseNum":1,"subs":[{"id":"dd44cacc282e9036bc4b","title":"should hide other controls when editing","type":"case","caseType":"failed","ok":false,"outcome":"unexpected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:145:7","timestamps":[1746783704994,1746783704995,1746783704995,1746783704995],"duration":1,"tags":[],"timeout":30000,"retry":1,"status":"failed","stepNum":46,"stepFailed":2,"stepSubs":true,"subs":[{"id":"phwrf6s5kb1u0a1g6rcp","title":"Before Hooks","type":"step","stepType":"hook","duration":692,"location":"","subs":[{"id":"c6dd8adm8fdgb0sig6zg","title":"beforeEach hook","type":"step","stepType":"hook","duration":412,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"mba6rju05pb6xtszktv3","title":"fixture: context","type":"step","stepType":"fixture","duration":24,"location":"","subs":[{"id":"kevxru25vzzgf3v5rw7c","title":"browser.newContext","type":"step","stepType":"pw:api","duration":11,"location":""}]},{"id":"lhs9of85zdbhvpaxnjre","title":"fixture: page","type":"step","stepType":"fixture","duration":72,"location":"","subs":[{"id":"ly2kfgkmd20y05ec3bhh","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":67,"location":""}]},{"id":"ee008p365q2s0si08ha7","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":310,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"orb3sjf38egqkynljh0d","title":"beforeEach hook","type":"step","stepType":"hook","duration":280,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:139:8","subs":[{"id":"ilkrvurxt0yixkm5gm6e","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":79,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"b3emi5wenuxl75az34lm","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"rjqvmsntu7ks6ur1nw7z","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":36,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"3tez3ewifw9w721v62yu","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":25,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"iq70dxahmzuodldla1b6","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"uod72wsru15v7ze4crwf","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":20,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"bfup0v9a41dse4kbcw89","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":24,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"xopieykrljf0jigruy8r","title":"expect.not.toBeVisible","type":"step","stepType":"expect","duration":5009,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:100:50","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByTestId('todo-item').nth(1).getByRole('checkbox')\nExpected: not visible\nReceived: visible\nCall log:\n\u001b[2m  - expect.not.toBeVisible with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-item').nth(1).getByRole('checkbox')\u001b[22m\n\u001b[2m    9 × locator resolved to <input class=\"toggle\" type=\"checkbox\" aria-label=\"Toggle Todo\"/>\u001b[22m\n\u001b[2m      - unexpected value \"visible\"\u001b[22m\n\n    at TodoPage.verifyEditMode (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:100:50)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:147:20"],"errorNum":1},{"id":"0rfgwd0i4w5ve8f65n96","title":"After Hooks","type":"step","stepType":"hook","duration":114,"location":"","subs":[{"id":"a81jzrtyl2jexd0eo0ha","title":"page.screenshot","type":"step","stepType":"pw:api","duration":63,"location":""},{"id":"s357xfpguw9f57wae7mb","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"sqsmn5fkjkkoc7lzohe0","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"43kv1nmqo8mhkizm0gib","title":"Worker Cleanup","type":"step","stepType":"hook","duration":29,"location":"","subs":[{"id":"rbhlq4x5l8rgbowweol6","title":"fixture: browser","type":"step","stepType":"fixture","duration":28,"location":""}]},{"id":"jwbjfrrfr8cvd4nsjjs4","title":"Retry #1","type":"step","stepType":"retry","status":"retry","retry":1},{"id":"wwy9b8ev6g6vgz9z3kk1","title":"Before Hooks","type":"step","stepType":"hook","duration":456,"location":"","subs":[{"id":"wntyjxgxeqif4v8u2gk5","title":"beforeEach hook","type":"step","stepType":"hook","duration":321,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"b47tv79ame6737yxu0id","title":"fixture: browser","type":"step","stepType":"fixture","duration":90,"location":"","subs":[{"id":"7ebrgmhhjk9fg2zzl35w","title":"browserType.launch","type":"step","stepType":"pw:api","duration":88,"location":""}]},{"id":"g7ggx9xn53g2s1wmztih","title":"fixture: context","type":"step","stepType":"fixture","duration":19,"location":"","subs":[{"id":"k32yqsx5hcs9xtnp3ohi","title":"browser.newContext","type":"step","stepType":"pw:api","duration":8,"location":""}]},{"id":"p1o12hedmiwisw43nxv2","title":"fixture: page","type":"step","stepType":"fixture","duration":37,"location":"","subs":[{"id":"nql6j0liehr6iqfjq9by","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":34,"location":""}]},{"id":"s2e9bwsj3aopfcazrbir","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":164,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"9kvgxuwtaw8it0c83f5d","title":"beforeEach hook","type":"step","stepType":"hook","duration":133,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:139:8","subs":[{"id":"la2rjlx7w9a7pm7kepw3","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":31,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"g24wtxhocqyv451xzo27","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":20,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ta77s786midugg13m4ez","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":12,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"ak0x30wv3pwi7ybaa2ag","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":15,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"3psvrdftf26lsi3pqhct","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":14,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"9aj6ztw7bsmmztxqs5il","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":14,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"riarsch08pr68dcyb1mx","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":15,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"i907vwxb1ydzo4n45do4","title":"expect.not.toBeVisible","type":"step","stepType":"expect","duration":5005,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:100:50","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByTestId('todo-item').nth(1).getByRole('checkbox')\nExpected: not visible\nReceived: visible\nCall log:\n\u001b[2m  - expect.not.toBeVisible with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-item').nth(1).getByRole('checkbox')\u001b[22m\n\u001b[2m    9 × locator resolved to <input class=\"toggle\" type=\"checkbox\" aria-label=\"Toggle Todo\"/>\u001b[22m\n\u001b[2m      - unexpected value \"visible\"\u001b[22m\n\n    at TodoPage.verifyEditMode (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:100:50)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:147:20"],"errorNum":1},{"id":"oezaeyrcpc872zazk2tf","title":"After Hooks","type":"step","stepType":"hook","duration":124,"location":"","subs":[{"id":"xos8wcw3xpi8clf5h02u","title":"page.screenshot","type":"step","stepType":"pw:api","duration":69,"location":""},{"id":"1mg1q91bt6v4xytdtrv9","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"3umdzva9mkixa0oux47l","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"8pnoxwendqr2f27cxe1d","title":"Worker Cleanup","type":"step","stepType":"hook","duration":29,"location":"","subs":[{"id":"86zznruece8e98n38jgi","title":"fixture: browser","type":"step","stepType":"fixture","duration":29,"location":""}]}],"attachments":[{"name":"screenshot","path":"attachments/3723f4608c22524d61745ea83b59133bbd3c42c8.png","contentType":"image/png","retry":0},{"name":"_error-context-0","path":"attachments/3650c6e7b3b7c69c54ae01da74c2c50228ecf7a4.markdown","contentType":"text/markdown","retry":0,"content":"# Test info\n\n- Name: Editing >> should hide other controls when editing\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:145:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).not.toBeVisible()\n\nLocator: getByTestId('todo-item').nth(1).getByRole('checkbox')\nExpected: not visible\nReceived: visible\nCall log:\n  - expect.not.toBeVisible with timeout 5000ms\n  - waiting for getByTestId('todo-item').nth(1).getByRole('checkbox')\n    9 × locator resolved to <input class=\"toggle\" type=\"checkbox\" aria-label=\"Toggle Todo\"/>\n      - unexpected value \"visible\"\n\n    at TodoPage.verifyEditMode (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:100:50)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:147:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: feed the cat\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"3\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n   30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n> 100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n      |                                                  ^ Error: Timed out 5000ms waiting for expect(locator).not.toBeVisible()\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n  131 |     await this.filters.nth(0).click();\n  132 |   }\n  133 |\n  134 |   async filterActive() {\n  135 |     await this.filters.nth(1).click();\n  136 |   }\n  137 |\n  138 |   async filterCompleted() {\n  139 |     await this.filters.nth(2).click();\n  140 |   }\n  141 |   async verifyFilterSelected(filterName: string) {\n  142 |     await expect(this.filters.filter({ has: this.page.locator('.selected') })).toHaveText(filterName);\n  143 |   }\n  144 | }\n  145 |\n```"},{"name":"trace","path":"attachments/1545cf0dc7b06cf5b6ca1b76c36918062b7263da.zip","contentType":"application/zip","retry":0},{"name":"screenshot","path":"attachments/8d948930b818edc78e34fecaf87269eec243947e.png","contentType":"image/png","retry":1},{"name":"_error-context-0","path":"attachments/da0fd3d827d27cd343425dd3b23bcc66f5102ab6.markdown","contentType":"text/markdown","retry":1,"content":"# Test info\n\n- Name: Editing >> should hide other controls when editing\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:145:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).not.toBeVisible()\n\nLocator: getByTestId('todo-item').nth(1).getByRole('checkbox')\nExpected: not visible\nReceived: visible\nCall log:\n  - expect.not.toBeVisible with timeout 5000ms\n  - waiting for getByTestId('todo-item').nth(1).getByRole('checkbox')\n    9 × locator resolved to <input class=\"toggle\" type=\"checkbox\" aria-label=\"Toggle Todo\"/>\n      - unexpected value \"visible\"\n\n    at TodoPage.verifyEditMode (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:100:50)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:147:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: feed the cat\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"3\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n   30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n> 100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n      |                                                  ^ Error: Timed out 5000ms waiting for expect(locator).not.toBeVisible()\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n  131 |     await this.filters.nth(0).click();\n  132 |   }\n  133 |\n  134 |   async filterActive() {\n  135 |     await this.filters.nth(1).click();\n  136 |   }\n  137 |\n  138 |   async filterCompleted() {\n  139 |     await this.filters.nth(2).click();\n  140 |   }\n  141 |   async verifyFilterSelected(filterName: string) {\n  142 |     await expect(this.filters.filter({ has: this.page.locator('.selected') })).toHaveText(filterName);\n  143 |   }\n  144 | }\n  145 |\n```"},{"name":"trace","path":"attachments/b1d0b8f029685973c385b16603ef5be67ecfd696.zip","contentType":"application/zip","retry":1}],"errorNum":2,"errorId":"xopieykrljf0jigruy8r"}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:138:6"}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:0:0"}]},{"id":"b51dc31ba092d0ab6173","title":"chromium e2e","type":"suite","suiteType":"project","caseNum":8,"subs":[{"id":"09035403a66b012a0c1a","title":"demo-todo-app.spec.ts","type":"suite","suiteType":"file","caseNum":8,"subs":[{"id":"08ce7a1b73060ffc64df","title":"Editing","type":"suite","suiteType":"describe","caseNum":4,"subs":[{"id":"4f9d8b8c5e580c9bc321","title":"should save edits on blur","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:151:7","timestamps":[1746783705001,1746783705002],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":25,"stepFailed":0,"stepSubs":true,"subs":[{"id":"rx5hxzghwkwiqhfa4c5m","title":"Before Hooks","type":"step","stepType":"hook","duration":1187,"location":"","subs":[{"id":"7tszh82lu6ede69cwwpl","title":"beforeEach hook","type":"step","stepType":"hook","duration":812,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"3gjzjvlzvovnv6hgxnot","title":"fixture: browser","type":"step","stepType":"fixture","duration":188,"location":"","subs":[{"id":"0e0k9lbqdb5p1mwx9kq1","title":"browserType.launch","type":"step","stepType":"pw:api","duration":177,"location":""}]},{"id":"eswn1sjyvyue7h57b2yt","title":"fixture: context","type":"step","stepType":"fixture","duration":70,"location":"","subs":[{"id":"8mnee0z4gdlmeyd1gs03","title":"browser.newContext","type":"step","stepType":"pw:api","duration":21,"location":""}]},{"id":"9tzrl6bup0ypulowl160","title":"fixture: page","type":"step","stepType":"fixture","duration":94,"location":"","subs":[{"id":"ltimo4s838q64tc7pwgj","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":85,"location":""}]},{"id":"qoxh1p71aqytzpi9r3jv","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":428,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"2hhh0jqrabpghwgma6eg","title":"beforeEach hook","type":"step","stepType":"hook","duration":372,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:139:8","subs":[{"id":"oskonzvyvh2o7g45zles","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":85,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"5qtflyzcmfv88rtflbb9","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"udzxk5x2a7m1toycpoep","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":21,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"1ovdgapj7jj2vorusbr8","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":61,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"k6xexbpkym4c1mzug23a","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":64,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"ve1mqwlbhlc2dztj6o24","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":59,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"3vjrpjzfs5d7d9t311jd","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":25,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"bons58qwb35ipcrmbgn2","title":"locator.getByTestId('todo-item').nth(1).dblclick","type":"step","stepType":"pw:api","duration":92,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:106:16"},{"id":"u4ppeqln8t5hr9xixtek","title":"locator.fill(buy some sausages)","type":"step","stepType":"pw:api","duration":52,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:107:55"},{"id":"s1o1yitsmq14i23p42kb","title":"locator.getByTestId('todo-item').nth(1).getByRole('textbox', { name: 'Edit' }).dispatchEvent","type":"step","stepType":"pw:api","duration":25,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:108:55"},{"id":"xkasjjuxkh6aw33nd9qd","title":"expect.toHaveText","type":"step","stepType":"expect","duration":13,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"9pnyq1gep8dkgn5rcuom","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":9,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:296:21"},{"id":"64ezrm9s6nbcoar41rj1","title":"After Hooks","type":"step","stepType":"hook","duration":152,"location":"","subs":[{"id":"n25oq6m564ehrmgo3r5u","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"p9dahurj8xa9ktb1irv5","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"e64d8c23501cabc87a14","title":"should trim entered text","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:158:7","timestamps":[1746783705001,1746783705001],"duration":0,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":25,"stepFailed":0,"stepSubs":true,"subs":[{"id":"sf2tgz85t0wj4bk6wb86","title":"Before Hooks","type":"step","stepType":"hook","duration":1187,"location":"","subs":[{"id":"b9u8tte0023onug7rz2a","title":"beforeEach hook","type":"step","stepType":"hook","duration":840,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"kojx3x5ezjvg681qew2s","title":"fixture: browser","type":"step","stepType":"fixture","duration":214,"location":"","subs":[{"id":"utmbuzsiwdyen78igee2","title":"browserType.launch","type":"step","stepType":"pw:api","duration":204,"location":""}]},{"id":"kmdgvmwc5k670qz04ik9","title":"fixture: context","type":"step","stepType":"fixture","duration":40,"location":"","subs":[{"id":"ux9nys4uj2xxg46yhq2v","title":"browser.newContext","type":"step","stepType":"pw:api","duration":20,"location":""}]},{"id":"wk93nofkbdeabl22qm0d","title":"fixture: page","type":"step","stepType":"fixture","duration":99,"location":"","subs":[{"id":"djz3olov9c0oolj42clo","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":95,"location":""}]},{"id":"nq0eb1jol0o8rzj2ars2","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":460,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"6i3huf4gt2nay1fo17ge","title":"beforeEach hook","type":"step","stepType":"hook","duration":343,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:139:8","subs":[{"id":"s6jkooj0kq4sap61ng6y","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":63,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"zxah04vyf7mil99x6fle","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":62,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"jeucpqsty1di3kpmavfm","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":39,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"cl0v5tl1dv17rryhu550","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"77xygueti2pk5fymoc8o","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":42,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"druk3mpyt0dg7vqxn3vu","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":38,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"kfwwz9npcvnhskma2y5y","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"g9q3agcb38ubnwi9h14d","title":"locator.getByTestId('todo-item').nth(1).dblclick","type":"step","stepType":"pw:api","duration":59,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:93:16"},{"id":"lvpbcjviwqea2br8ggt0","title":"locator.fill(    buy some sausages    )","type":"step","stepType":"pw:api","duration":51,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:94:55"},{"id":"vcef39zudu1e7td8fhvj","title":"locator.getByTestId('todo-item').nth(1).getByRole('textbox', { name: 'Edit' }).press(Enter)","type":"step","stepType":"pw:api","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:95:55"},{"id":"0134cgp9vbw26o18gm3p","title":"expect.toHaveText","type":"step","stepType":"expect","duration":12,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"irv6fk917cjuqjm5wtdv","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":12,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:296:21"},{"id":"sespgoj3ve8n0eg9ox7o","title":"After Hooks","type":"step","stepType":"hook","duration":115,"location":"","subs":[{"id":"ur4k027nx7l78bizssz6","title":"fixture: page","type":"step","stepType":"fixture","duration":1,"location":""},{"id":"ableevo0qvr4yu4q5nkt","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"5fad9da48a03375303e5","title":"should remove the item if an empty text string was entered","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:165:7","timestamps":[1746783705001,1746783705001],"duration":0,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":24,"stepFailed":0,"stepSubs":true,"subs":[{"id":"me4edptuuc18kh1n43xu","title":"Before Hooks","type":"step","stepType":"hook","duration":1096,"location":"","subs":[{"id":"hnjqyr367p5qabttqi41","title":"beforeEach hook","type":"step","stepType":"hook","duration":722,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"yx9mp34rsfhym0fv67qa","title":"fixture: browser","type":"step","stepType":"fixture","duration":264,"location":"","subs":[{"id":"i1ndiplxes85d9w8z9pk","title":"browserType.launch","type":"step","stepType":"pw:api","duration":259,"location":""}]},{"id":"h241wzh3fdi9xuiopapr","title":"fixture: context","type":"step","stepType":"fixture","duration":50,"location":"","subs":[{"id":"o9guq2tfg84cc04b06c5","title":"browser.newContext","type":"step","stepType":"pw:api","duration":19,"location":""}]},{"id":"pkit32aupwxvly3joh8g","title":"fixture: page","type":"step","stepType":"fixture","duration":59,"location":"","subs":[{"id":"j9ca7nxh39z53ubrk873","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":52,"location":""}]},{"id":"b2ys1lk03h7koghb4f4v","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":329,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"n56tqrewm9evxvxq9122","title":"beforeEach hook","type":"step","stepType":"hook","duration":373,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:139:8","subs":[{"id":"1qbbdmw1nbgmi8381455","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":68,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"3tqjh4ihs5mq14mkk6lb","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"zk51i3k5hto3cl84i92u","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":35,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"8xxrwggo74qoloa8qgvf","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":54,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"j657jl5csrmu2rvu8p5d","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":44,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"furwpafqzox7knn5w0kj","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":39,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"sevix9oq6w96czkxmqlk","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":55,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"s9hf7f04gvgcqf83tpkj","title":"locator.getByTestId('todo-item').nth(1).dblclick","type":"step","stepType":"pw:api","duration":54,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:93:16"},{"id":"3m7zc95mmqqrv1o7z0dv","title":"locator.fill()","type":"step","stepType":"pw:api","duration":50,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:94:55"},{"id":"06tj2p0cb7uev8htopu2","title":"locator.getByTestId('todo-item').nth(1).getByRole('textbox', { name: 'Edit' }).press(Enter)","type":"step","stepType":"pw:api","duration":71,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:95:55"},{"id":"wn9ononvh6hdhwh5fl7n","title":"expect.toHaveText","type":"step","stepType":"expect","duration":23,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"19iv3i4d9j6k7rvewkpv","title":"After Hooks","type":"step","stepType":"hook","duration":123,"location":"","subs":[{"id":"pwyp6foqb75f9yr320ra","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"yajo6rseuwj2llxqh7o5","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"3020ad17fb3762a52348","title":"should cancel edits on escape","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:171:7","timestamps":[1746783705001,1746783705001],"duration":0,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":24,"stepFailed":0,"stepSubs":true,"subs":[{"id":"ikr1gy53oui30ry7w3do","title":"Before Hooks","type":"step","stepType":"hook","duration":1171,"location":"","subs":[{"id":"6tv877opsh6cggpgxbk5","title":"beforeEach hook","type":"step","stepType":"hook","duration":800,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"hpqw4hkdck7vep7kyhv3","title":"fixture: browser","type":"step","stepType":"fixture","duration":186,"location":"","subs":[{"id":"o778suzohbr4yghxj4aq","title":"browserType.launch","type":"step","stepType":"pw:api","duration":182,"location":""}]},{"id":"hpi5gfw2kcwlw51ov6df","title":"fixture: context","type":"step","stepType":"fixture","duration":46,"location":"","subs":[{"id":"jwnh6th5i495xlj265s4","title":"browser.newContext","type":"step","stepType":"pw:api","duration":8,"location":""}]},{"id":"ggqdi5lok4kcod7mbl0d","title":"fixture: page","type":"step","stepType":"fixture","duration":130,"location":"","subs":[{"id":"afjbv2pdhpz4cdrilv98","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":125,"location":""}]},{"id":"xze43xldgu4ral8aaw5o","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":420,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"aty3eynxvzpubxu18zda","title":"beforeEach hook","type":"step","stepType":"hook","duration":369,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:139:8","subs":[{"id":"ip4mnswro3ayadf6vuwt","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":80,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"45l1jq21h3lply3fh9q0","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":64,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"pw0qg2nokmwpjlfwja2v","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":44,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"fqq243fqc5v7jpir7drs","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":51,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"4dxl70p4coyshybkacde","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":42,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"vkgbb6f4vcphckhnwx8v","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":36,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"9y00aji0sqn1vp6vacs3","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"}]}]},{"id":"776mowm0451d9a6swwy0","title":"locator.getByTestId('todo-item').nth(1).dblclick","type":"step","stepType":"pw:api","duration":36,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:113:16"},{"id":"9zdnbazbe7gi6aah49vk","title":"locator.fill(buy some sausages)","type":"step","stepType":"pw:api","duration":39,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:114:55"},{"id":"uxte71xh8jia4792l654","title":"locator.getByTestId('todo-item').nth(1).getByRole('textbox', { name: 'Edit' }).press(Escape)","type":"step","stepType":"pw:api","duration":45,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:115:55"},{"id":"b8vaa18tzdonr1obbzia","title":"expect.toHaveText","type":"step","stepType":"expect","duration":15,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"kzr3zjtueuujij1hpvme","title":"After Hooks","type":"step","stepType":"hook","duration":132,"location":"","subs":[{"id":"7fbgqsp21fqyznjfseuz","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"kgcb7dblupje5035cxrn","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:138:6"},{"id":"785e1888684846bc5581","title":"Counter","type":"suite","suiteType":"describe","caseNum":1,"subs":[{"id":"be9982ef083df7b846bb","title":"should display the current number of todo items","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:179:7","timestamps":[1746783705001,1746783705002],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":17,"stepFailed":0,"stepSubs":true,"subs":[{"id":"4srh3qe2y375ayzuehf4","title":"Before Hooks","type":"step","stepType":"hook","duration":417,"location":"","subs":[{"id":"nysyvgo6ownd1vf07xcl","title":"beforeEach hook","type":"step","stepType":"hook","duration":416,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"69xxz07jddwkz7uqobfp","title":"fixture: context","type":"step","stepType":"fixture","duration":16,"location":"","subs":[{"id":"59np3pqjhx2h0445x9mh","title":"browser.newContext","type":"step","stepType":"pw:api","duration":9,"location":""}]},{"id":"1jz0bdx3569r4zy31ucm","title":"fixture: page","type":"step","stepType":"fixture","duration":47,"location":"","subs":[{"id":"9yp31qz8xhyl62nj2ga2","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":45,"location":""}]},{"id":"jis0vdeb12qdbitx78lc","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":340,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"qhvlktsxxnv4z561iptd","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":73,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"2f2fogyl1hjalft8y93k","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":65,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"4yljdpm3y2m97cjhipab","title":"expect.toContainText","type":"step","stepType":"expect","duration":11,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:44:34"},{"id":"sfkdb8lkm0wdefwx1nqy","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":45,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"rndzikk07q3o7ukux90y","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":34,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"jzyi4mjloqiajv1y5h7u","title":"expect.toContainText","type":"step","stepType":"expect","duration":13,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:44:34"},{"id":"cn65zsps9yo6ddf1ffz9","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:284:21"},{"id":"fzr29n3y4cm4o53pfuz2","title":"After Hooks","type":"step","stepType":"hook","duration":117,"location":"","subs":[{"id":"87rdkx2k18tk0n48ziia","title":"fixture: page","type":"step","stepType":"fixture","duration":1,"location":""},{"id":"2ta3mvatfet3thqslee4","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:178:6"},{"id":"df561f30be3208ecedaf","title":"Clear completed button","type":"suite","suiteType":"describe","caseNum":3,"subs":[{"id":"e327d66bef9f2965897f","title":"should display the correct text","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:197:7","timestamps":[1746783705001,1746783705002],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":19,"stepFailed":0,"stepSubs":true,"subs":[{"id":"rsqp8pu5kgcvnyhit5c2","title":"Before Hooks","type":"step","stepType":"hook","duration":649,"location":"","subs":[{"id":"az5nf54mivojkwxe522c","title":"beforeEach hook","type":"step","stepType":"hook","duration":376,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"zt8dd9r8i6piyrfrsckq","title":"fixture: context","type":"step","stepType":"fixture","duration":16,"location":"","subs":[{"id":"seteq27uny67c2hm3fdj","title":"browser.newContext","type":"step","stepType":"pw:api","duration":5,"location":""}]},{"id":"65yz3sklctuw7wpr6v3w","title":"fixture: page","type":"step","stepType":"fixture","duration":78,"location":"","subs":[{"id":"f7p6r2z02fwby8q2eqof","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":73,"location":""}]},{"id":"as5aeh8crg80xcf5ctv6","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":278,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"ijjb3fsk21ps52talie5","title":"beforeEach hook","type":"step","stepType":"hook","duration":273,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:192:8","subs":[{"id":"7v9e6njzc4h9jdogk2us","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":56,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"23qzcses456z8ydwjdfq","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":52,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"7tfk3uefg28797bv235e","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":42,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"2vad0urzpdz4n2x66uc4","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":45,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ln6habzcxouhfjp8symk","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":32,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"2pndk0le9ht9ukovxckq","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"}]}]},{"id":"prfoktvlvnoio3i4wmj6","title":"locator.getByTestId('todo-item').first().getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":81,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"42qsvcffcgoskxvhllhv","title":"expect.toBeVisible","type":"step","stepType":"expect","duration":17,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:123:45"},{"id":"mbvoatfo7epz96ee05ts","title":"After Hooks","type":"step","stepType":"hook","duration":136,"location":"","subs":[{"id":"rid9pq3rnjkuqi5n496l","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"h9jfrtrnn0zrvgsqq8y8","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"b1246efcb9815dcb9830","title":"should remove completed items when clicked","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:203:7","timestamps":[1746783705001,1746783705002],"duration":1,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":20,"stepFailed":0,"stepSubs":true,"subs":[{"id":"9ip8ewnf88rk680ec39p","title":"Before Hooks","type":"step","stepType":"hook","duration":700,"location":"","subs":[{"id":"fcnnmhdnf444y5l58x8z","title":"beforeEach hook","type":"step","stepType":"hook","duration":400,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"l5xt38r5qrgxefxaqfho","title":"fixture: context","type":"step","stepType":"fixture","duration":10,"location":"","subs":[{"id":"t8rui8iydprm07axkgkw","title":"browser.newContext","type":"step","stepType":"pw:api","duration":5,"location":""}]},{"id":"isfartb927g3pu5mgmnx","title":"fixture: page","type":"step","stepType":"fixture","duration":58,"location":"","subs":[{"id":"l9ja0ara5ceboyot9od1","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":55,"location":""}]},{"id":"muwq5phj4vohd2ckkmip","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":322,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"ii54mqnfpzoe00qevzvz","title":"beforeEach hook","type":"step","stepType":"hook","duration":299,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:192:8","subs":[{"id":"yvj9ufek0m7ugqbmrukd","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"ffm8c11hmg1igljcdpoq","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":74,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"4uz8lplu0wgtjjbyephm","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":40,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"stn5g20jn7136pn0ojet","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":63,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"u2d8ljn2vvd9lb93e3pg","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":31,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"3272fkh5p5rr6t9bujjt","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":34,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"}]}]},{"id":"2qq3ylyk94mzy3vf17d8","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":68,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"8dpkqg1nmttwhroh0vft","title":"locator.getByRole('button', { name: 'Clear completed' }).click","type":"step","stepType":"pw:api","duration":102,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:119:37"},{"id":"3sq2iypxep798nn1w679","title":"expect.toHaveText","type":"step","stepType":"expect","duration":17,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"y765uoqo5e9le2cr2qx5","title":"After Hooks","type":"step","stepType":"hook","duration":98,"location":"","subs":[{"id":"oa8ssm9x0554se0ce43q","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"nxzfr25zk3xiuyhxo0jd","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"f3afb01310c20b0296aa","title":"should be hidden when there are no items that are completed","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:210:7","timestamps":[1746783705002,1746783705002],"duration":0,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":20,"stepFailed":0,"stepSubs":true,"subs":[{"id":"40nx3y7gnk4zvm1qezuj","title":"Before Hooks","type":"step","stepType":"hook","duration":713,"location":"","subs":[{"id":"jyt13recromoac4zbjd0","title":"beforeEach hook","type":"step","stepType":"hook","duration":439,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"ssuw3ky2c92ggrj5rp8a","title":"fixture: context","type":"step","stepType":"fixture","duration":21,"location":"","subs":[{"id":"ngghwyz5uo6it6wu1zla","title":"browser.newContext","type":"step","stepType":"pw:api","duration":6,"location":""}]},{"id":"oohd5cdek9jyv6bmey3b","title":"fixture: page","type":"step","stepType":"fixture","duration":47,"location":"","subs":[{"id":"3uzd3ne2f1nwno8zyort","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":46,"location":""}]},{"id":"kf2sp9z7at2f5ckoeh8q","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":350,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"zrwq17qt4ynesgs42wz0","title":"beforeEach hook","type":"step","stepType":"hook","duration":272,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:192:8","subs":[{"id":"etqd43xq11ukai1c6166","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":80,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"j17xir7hpqy1l6dezjzf","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":58,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ap1s9aeblw3peqev8ptb","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":35,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"1ygy6wtavjbs65rkpukk","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":39,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"weg8z8yibhdk2lr289n9","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":19,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"7pmau3qfs1yanrpmenqz","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":26,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"}]}]},{"id":"4tp97sdwnadgiq4uenda","title":"locator.getByTestId('todo-item').first().getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":87,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"tatlq1u5e48hzymalg1j","title":"locator.getByRole('button', { name: 'Clear completed' }).click","type":"step","stepType":"pw:api","duration":66,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:119:37"},{"id":"z5hvh6e3on2z67tlvuqp","title":"expect.toBeHidden","type":"step","stepType":"expect","duration":6,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:127:45"},{"id":"u0xfa85yro24cr37yhgd","title":"After Hooks","type":"step","stepType":"hook","duration":99,"location":"","subs":[{"id":"5iv2vmbkdwa136d5mujz","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"tpueocgpumrf2f2awa6s","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:191:6"}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:0:0"}]},{"id":"b51dc31ba092d0ab6173","title":"chromium e2e","type":"suite","suiteType":"project","caseNum":8,"subs":[{"id":"09035403a66b012a0c1a","title":"demo-todo-app.spec.ts","type":"suite","suiteType":"file","caseNum":6,"subs":[{"id":"f7e1265e6ca7093d7314","title":"Persistence","type":"suite","suiteType":"describe","caseNum":1,"subs":[{"id":"eaba86ca91161b7e46fe","title":"should persist its data","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:219:7","timestamps":[1746783705013,1746783705013],"duration":0,"tags":[],"timeout":30000,"retry":0,"status":"passed","stepNum":19,"stepFailed":0,"stepSubs":true,"subs":[{"id":"giqybn8wzcz75yqtv9us","title":"Before Hooks","type":"step","stepType":"hook","duration":1074,"location":"","subs":[{"id":"uhxy5lw56qocw5fsg9kl","title":"beforeEach hook","type":"step","stepType":"hook","duration":1071,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"a0fdhg6pho5ooy0bwp0w","title":"fixture: browser","type":"step","stepType":"fixture","duration":223,"location":"","subs":[{"id":"7zq7esbemzjmt7dhif12","title":"browserType.launch","type":"step","stepType":"pw:api","duration":216,"location":""}]},{"id":"l5oujrkb7jcxxlk6k96s","title":"fixture: context","type":"step","stepType":"fixture","duration":111,"location":"","subs":[{"id":"ousf5jw7pu8kunnspmve","title":"browser.newContext","type":"step","stepType":"pw:api","duration":31,"location":""}]},{"id":"t63sgd6s2oy6tpjqe416","title":"fixture: page","type":"step","stepType":"fixture","duration":100,"location":"","subs":[{"id":"nf67cic6dwdlwzq5sotx","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":96,"location":""}]},{"id":"6eroofx32sobva9e9i73","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":618,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]}]},{"id":"u4qjmccdrk45tvu1s6mb","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":89,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"aolwpq91m7rjbb880ukw","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":52,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"c5t35mb31s2zu4t1x7so","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":54,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"uw7od1029cu7t5vcsko1","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"2ppu0dp5i2cmrun8mxdo","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":87,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:226:45"},{"id":"krqjim1h628lm0cb2k7f","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":561,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:227:22"},{"id":"ph835ldpctr691vnilax","title":"expect.toHaveText","type":"step","stepType":"expect","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38"},{"id":"xlv24cctz209n4vdo0ki","title":"After Hooks","type":"step","stepType":"hook","duration":115,"location":"","subs":[{"id":"t9sauy47stn2rbssnedk","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"7i9sa2yo2ils44tpc1pf","title":"fixture: context","type":"step","stepType":"fixture","duration":1,"location":""}]}]}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:218:6"},{"id":"2edf1f4a9a4844db204a","title":"Routing","type":"suite","suiteType":"describe","caseNum":5,"subs":[{"id":"ccfae588ea46944472fa","title":"should allow me to display active items","type":"case","caseType":"failed","ok":false,"outcome":"unexpected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:242:7","timestamps":[1746783705013,1746783705014,1746783705014,1746783705014],"duration":1,"tags":[],"timeout":30000,"retry":1,"status":"failed","stepNum":52,"stepFailed":2,"stepSubs":true,"subs":[{"id":"7ypug6l9rv0p3qso8dac","title":"Before Hooks","type":"step","stepType":"hook","duration":1625,"location":"","subs":[{"id":"55cz1hixccmxqfg3w1ps","title":"beforeEach hook","type":"step","stepType":"hook","duration":1165,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"ccqpwm1utvfhc1mabg0o","title":"fixture: browser","type":"step","stepType":"fixture","duration":206,"location":"","subs":[{"id":"cdopf8kuxpwa5qbytf9j","title":"browserType.launch","type":"step","stepType":"pw:api","duration":202,"location":""}]},{"id":"0dtunmf3hzqxoi7sgdei","title":"fixture: context","type":"step","stepType":"fixture","duration":23,"location":"","subs":[{"id":"dhvy80b83aba046dazqy","title":"browser.newContext","type":"step","stepType":"pw:api","duration":9,"location":""}]},{"id":"b2uw3kt8fo91z07okrim","title":"fixture: page","type":"step","stepType":"fixture","duration":106,"location":"","subs":[{"id":"ua22st0t8lyk1jnjxult","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":102,"location":""}]},{"id":"97dzlttjjb5htmqlv820","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":806,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"xzxnkgnyxcjtvb7hh8sw","title":"beforeEach hook","type":"step","stepType":"hook","duration":459,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"8xdw4pukkaxoqxvljidz","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":87,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"pfc0pmiqq0wnhjsajq0o","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":59,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"8z65dywh7xunxmlf5i48","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":32,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"txxgy0gk237gpw4dt3pg","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":57,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"prnr5994bmi4yon3gowg","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":51,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"bywbhybxu2j9vy10r770","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":44,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"5qsg7dkszlw5weyd63ps","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":79,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"1dkewqpg0qdqhh4ts0wh","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":26,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"a13ixa6pu598ifb4z8v4","title":"locator.getByRole('link').nth(1).click","type":"step","stepType":"pw:api","duration":80,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:135:31"},{"id":"japeicag4gapee08g84a","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5016,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"buy some cheese\",\u001b[22m\n\u001b[31m+   \"feed the cat\",\u001b[39m\n\u001b[2m    \"book a doctors appointment\",\u001b[22m\n\u001b[2m  ]\u001b[22m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 3 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:245:20"],"errorNum":1},{"id":"be7jji6rnun5xx715nw8","title":"After Hooks","type":"step","stepType":"hook","duration":133,"location":"","subs":[{"id":"pcovuzgsfch5gfsvbbyo","title":"page.screenshot","type":"step","stepType":"pw:api","duration":69,"location":""},{"id":"a4gwhdzbwugytwjbz2k8","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"9f7evc9o2pxsfiiq3xxc","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"qmm6npxa70gtqfnpgf3l","title":"Worker Cleanup","type":"step","stepType":"hook","duration":23,"location":"","subs":[{"id":"zoqq681g083jswkou1ov","title":"fixture: browser","type":"step","stepType":"fixture","duration":22,"location":""}]},{"id":"v495e51ueb65nw2ua685","title":"Retry #1","type":"step","stepType":"retry","status":"retry","retry":1},{"id":"dbuzff2d73lbedqnod5g","title":"Before Hooks","type":"step","stepType":"hook","duration":983,"location":"","subs":[{"id":"7xo0h0ud3djwuiki34ay","title":"beforeEach hook","type":"step","stepType":"hook","duration":561,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"5073oh543ccx6d91pw86","title":"fixture: browser","type":"step","stepType":"fixture","duration":169,"location":"","subs":[{"id":"6yxbncp34ramupmq4yfy","title":"browserType.launch","type":"step","stepType":"pw:api","duration":165,"location":""}]},{"id":"2np2dp03apdrz6cgwjci","title":"fixture: context","type":"step","stepType":"fixture","duration":36,"location":"","subs":[{"id":"eleq5mji54d66hgpitv8","title":"browser.newContext","type":"step","stepType":"pw:api","duration":19,"location":""}]},{"id":"lktnp6b34uz3t2x7vqwm","title":"fixture: page","type":"step","stepType":"fixture","duration":84,"location":"","subs":[{"id":"18kv5ha1hgwsvdkhqbix","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":82,"location":""}]},{"id":"qkceuglb4k7ugfclzdz0","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":254,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"kk34inxzkiv6yqtipu8f","title":"beforeEach hook","type":"step","stepType":"hook","duration":416,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"c8upnetghasz0j6e92uf","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":101,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"mgpqd3vbwue1qhivt5ap","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":106,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"skf9pviluaydb5g8xugm","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":36,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"gacqiuwkv8jft7l6e51p","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":36,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"4wlizdkksnjby2few6tq","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":26,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"23vl2l2fepusjptmk76a","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":17,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"p67ec98a6ziktlhw0z4a","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"z2et0vysagxuqgv873eg","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":17,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"2onqqoplfbfmh2fmvarr","title":"locator.getByRole('link').nth(1).click","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:135:31"},{"id":"9itg6fsbzn1n6ysx3jmf","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5011,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[2m    \"buy some cheese\",\u001b[22m\n\u001b[31m+   \"feed the cat\",\u001b[39m\n\u001b[2m    \"book a doctors appointment\",\u001b[22m\n\u001b[2m  ]\u001b[22m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 3 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:245:20"],"errorNum":1},{"id":"sd2oqwsqe2pz36i2prda","title":"After Hooks","type":"step","stepType":"hook","duration":122,"location":"","subs":[{"id":"bhfn5mw0fq0odgbrf81t","title":"page.screenshot","type":"step","stepType":"pw:api","duration":60,"location":""},{"id":"xp6emhpcf9c6omiu5d7r","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"zsclvc1msqkjrm4m1vc0","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"zzg3o0zu81yghhfznc9u","title":"Worker Cleanup","type":"step","stepType":"hook","duration":23,"location":"","subs":[{"id":"8agment4ubpeu8mwl7tr","title":"fixture: browser","type":"step","stepType":"fixture","duration":23,"location":""}]}],"attachments":[{"name":"screenshot","path":"attachments/abdbdcba99afb94ffa863d73d3fa0f146d72d509.png","contentType":"image/png","retry":0},{"name":"_error-context-0","path":"attachments/1f3de39ba71151ff3dededbdd0f5f639dcd5f62f.markdown","contentType":"text/markdown","retry":0,"content":"# Test info\n\n- Name: Routing >> should allow me to display active items\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:242:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 0\n+ Received  + 1\n\n  Array [\n    \"buy some cheese\",\n+   \"feed the cat\",\n    \"book a doctors appointment\",\n  ]\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 3 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:245:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\" [checked]\n    - text: feed the cat\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/00fc03272215bde33b0492fa7c0dbf0c20b1044d.zip","contentType":"application/zip","retry":0},{"name":"screenshot","path":"attachments/a7755bf2fb9aa98e16a0fbb6873f326a48c22c4a.png","contentType":"image/png","retry":1},{"name":"_error-context-0","path":"attachments/22fcfdbe6480b091cccd8ab021d081e0a13cffec.markdown","contentType":"text/markdown","retry":1,"content":"# Test info\n\n- Name: Routing >> should allow me to display active items\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:242:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 0\n+ Received  + 1\n\n  Array [\n    \"buy some cheese\",\n+   \"feed the cat\",\n    \"book a doctors appointment\",\n  ]\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 3 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:245:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\" [checked]\n    - text: feed the cat\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/41aacb7b76595b90fa1987dbee4e08e4b7037c8f.zip","contentType":"application/zip","retry":1}],"errorNum":2,"errorId":"japeicag4gapee08g84a"},{"id":"01b8ada359ccd6874988","title":"should respect the back button","type":"case","caseType":"failed","ok":false,"outcome":"unexpected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:248:7","timestamps":[1746783705013,1746783705014,1746783705014,1746783705014],"duration":1,"tags":[],"timeout":30000,"retry":1,"status":"failed","stepNum":54,"stepFailed":2,"stepSubs":true,"subs":[{"id":"m4nazi14ylhzc8nb8lc3","title":"Before Hooks","type":"step","stepType":"hook","duration":1710,"location":"","subs":[{"id":"2m49wfr5qri0hhf0nmq2","title":"beforeEach hook","type":"step","stepType":"hook","duration":1060,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"qyico3hiu4o7xzlvhqiy","title":"fixture: browser","type":"step","stepType":"fixture","duration":221,"location":"","subs":[{"id":"w40c3qnlujk048rt4zbv","title":"browserType.launch","type":"step","stepType":"pw:api","duration":211,"location":""}]},{"id":"86qg3tcvgu3wsw7pxept","title":"fixture: context","type":"step","stepType":"fixture","duration":61,"location":"","subs":[{"id":"daglt57z8w8aiql94c7e","title":"browser.newContext","type":"step","stepType":"pw:api","duration":29,"location":""}]},{"id":"ni0tc7h2rgax0wz6j8fe","title":"fixture: page","type":"step","stepType":"fixture","duration":127,"location":"","subs":[{"id":"5qi9axw7h08m9agq1zge","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":120,"location":""}]},{"id":"jnoj7kcdjpg3ddj98gfy","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":623,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"k77nqlqybmtwhd4kkgis","title":"beforeEach hook","type":"step","stepType":"hook","duration":647,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"v41jx5q7anljuttq4w2z","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":88,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"db96suhqqcocx04gzuvs","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":73,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"tczo60gzqsaojpsp8822","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"25542fijnxochozqg5bd","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":69,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"575252ak5bi5foqht07o","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":80,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"ceyrcveswyr13eh11rk3","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":85,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"0knx60wvljh3ya7pahco","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":139,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"v3tv87ch1d9x1fc58bvk","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":39,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"ck52uc4o2cn7blt07apv","title":"locator.getByRole('link').nth(1).click","type":"step","stepType":"pw:api","duration":132,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:135:31"},{"id":"2sk9cchzcobpmgasp5mo","title":"locator.getByRole('link').nth(2).click","type":"step","stepType":"pw:api","duration":96,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:139:31"},{"id":"qe3rsc93725ecz4n4l6c","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5029,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"feed the cat\",\u001b[39m\n\u001b[31m+   \"buy some cheese\",\u001b[39m\n\u001b[31m+   \"book a doctors appointment\",\u001b[39m\n\u001b[2m  ]\u001b[22m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 2 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:252:20"],"errorNum":1},{"id":"xpk0a2aoqkdflqqsm7de","title":"After Hooks","type":"step","stepType":"hook","duration":178,"location":"","subs":[{"id":"bw3vkanxb6ab93bksw6l","title":"page.screenshot","type":"step","stepType":"pw:api","duration":85,"location":""},{"id":"sais455zs5vy7m0r9a88","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"lj8k3f5st0cxt8rn48u4","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"13q073igpq4hohjrx3tv","title":"Worker Cleanup","type":"step","stepType":"hook","duration":41,"location":"","subs":[{"id":"dkfmotcu9tlto0lqgy32","title":"fixture: browser","type":"step","stepType":"fixture","duration":40,"location":""}]},{"id":"brt8vfis2p9x4woetd37","title":"Retry #1","type":"step","stepType":"retry","status":"retry","retry":1},{"id":"tepd2zd99tw5ncleunc2","title":"Before Hooks","type":"step","stepType":"hook","duration":1211,"location":"","subs":[{"id":"29nya1nypghi4z6tznd5","title":"beforeEach hook","type":"step","stepType":"hook","duration":911,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"yzj83nrkskdzdwx8kjyc","title":"fixture: browser","type":"step","stepType":"fixture","duration":181,"location":"","subs":[{"id":"fvp9ajajnt17c2ro4zz3","title":"browserType.launch","type":"step","stepType":"pw:api","duration":171,"location":""}]},{"id":"e9dm0dqyak1yw8n5azip","title":"fixture: context","type":"step","stepType":"fixture","duration":51,"location":"","subs":[{"id":"klma92vldkh5lkouk1rm","title":"browser.newContext","type":"step","stepType":"pw:api","duration":23,"location":""}]},{"id":"iglde8w9gy7caqcj1soe","title":"fixture: page","type":"step","stepType":"fixture","duration":72,"location":"","subs":[{"id":"onm4ghwcl9vntkdbotik","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":70,"location":""}]},{"id":"33g0p3shciuw6okrm8gd","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":592,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"vamsl9glduz18kycetqd","title":"beforeEach hook","type":"step","stepType":"hook","duration":296,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"y6371x20xt0rs4tmily2","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":46,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"0zbfc5il6pi2fv29nonm","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"jc8lxbb825qobcf6y5c2","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":22,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"xvu6o8lbf4zjpjmnfxv4","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ooibv3ybx3jdhuz77xpc","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":38,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"sdifi77idrvidf6dhzxc","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":40,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"8ierl4rjr9y2b09n4qym","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":46,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"tgw2iis2xd8v957sr8ns","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":17,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"fp6163b13v48gcw2fvq1","title":"locator.getByRole('link').nth(1).click","type":"step","stepType":"pw:api","duration":72,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:135:31"},{"id":"lcpzxn1fb5wo2nk8y60g","title":"locator.getByRole('link').nth(2).click","type":"step","stepType":"pw:api","duration":66,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:139:31"},{"id":"bd1wr3y6kwf7q66w1uaf","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5015,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"feed the cat\",\u001b[39m\n\u001b[31m+   \"buy some cheese\",\u001b[39m\n\u001b[31m+   \"book a doctors appointment\",\u001b[39m\n\u001b[2m  ]\u001b[22m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 2 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:252:20"],"errorNum":1},{"id":"5fmd7b9egcxqpgc2cztf","title":"After Hooks","type":"step","stepType":"hook","duration":169,"location":"","subs":[{"id":"k3v1gnp3zf5gxvj2uyr9","title":"page.screenshot","type":"step","stepType":"pw:api","duration":73,"location":""},{"id":"2s72okja027hz4ul9jq8","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"44st6ktelw8ldvbv2f1l","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"va43h31d1pqttk1nvebo","title":"Worker Cleanup","type":"step","stepType":"hook","duration":57,"location":"","subs":[{"id":"jka5tkhpvi78g92dw9wc","title":"fixture: browser","type":"step","stepType":"fixture","duration":56,"location":""}]}],"attachments":[{"name":"screenshot","path":"attachments/ee8be64e9fcab938e356cd00de7cffd988a99d25.png","contentType":"image/png","retry":0},{"name":"_error-context-0","path":"attachments/c38d67bfe52998017ce45cbf3b8ab8e9af8c49b1.markdown","contentType":"text/markdown","retry":0,"content":"# Test info\n\n- Name: Routing >> should respect the back button\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:248:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 1\n+ Received  + 2\n\n  Array [\n-   \"feed the cat\",\n+   \"buy some cheese\",\n+   \"book a doctors appointment\",\n  ]\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 2 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:252:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/ca693af8be94bb20e89ebc15a301ce5b325f94c6.zip","contentType":"application/zip","retry":0},{"name":"screenshot","path":"attachments/c17a950d172aef9ce9803bfa15a39f2d1c482755.png","contentType":"image/png","retry":1},{"name":"_error-context-0","path":"attachments/85fcc9a03735e63f9e5275cef6d4c7ef6a4ae70d.markdown","contentType":"text/markdown","retry":1,"content":"# Test info\n\n- Name: Routing >> should respect the back button\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:248:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 1\n+ Received  + 2\n\n  Array [\n-   \"feed the cat\",\n+   \"buy some cheese\",\n+   \"book a doctors appointment\",\n  ]\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 2 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:252:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/dd768f64ede7a6f873f7db0fb720164070f92c91.zip","contentType":"application/zip","retry":1}],"errorNum":2,"errorId":"qe3rsc93725ecz4n4l6c"},{"id":"1aad7cfb6821778273c5","title":"should allow me to display completed items","type":"case","caseType":"failed","ok":false,"outcome":"unexpected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:259:7","timestamps":[1746783705013,1746783705014,1746783705014,1746783705014],"duration":1,"tags":[],"timeout":30000,"retry":1,"status":"failed","stepNum":52,"stepFailed":2,"stepSubs":true,"subs":[{"id":"ixibxu2dfy7rbqpxj84f","title":"Before Hooks","type":"step","stepType":"hook","duration":1792,"location":"","subs":[{"id":"zm6togrpxgokrcy1nz4v","title":"beforeEach hook","type":"step","stepType":"hook","duration":1169,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"6b4tfsdgl26w2vsrf9tk","title":"fixture: browser","type":"step","stepType":"fixture","duration":216,"location":"","subs":[{"id":"wpxqc2eiyqbq54wwsayq","title":"browserType.launch","type":"step","stepType":"pw:api","duration":208,"location":""}]},{"id":"xri23puve7a1pswq9f4a","title":"fixture: context","type":"step","stepType":"fixture","duration":70,"location":"","subs":[{"id":"r2zh7hvqput6jc8ugkkj","title":"browser.newContext","type":"step","stepType":"pw:api","duration":20,"location":""}]},{"id":"nhp4caavjz9rtgis17vn","title":"fixture: page","type":"step","stepType":"fixture","duration":143,"location":"","subs":[{"id":"fyj7skg43bjexkq1zl61","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":131,"location":""}]},{"id":"pfpr86sgojqgkzaov0zv","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":716,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"5ssgl2zdiwk873hkp4r6","title":"beforeEach hook","type":"step","stepType":"hook","duration":622,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"2gku72nltvbkrww472dd","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":117,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"85cmraycnx3a5kex4phh","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":99,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"g7ywyo45u5mlbixfbppr","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":40,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"robd0bvx64xzyl7rpctx","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":81,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"gfa69qfj2w64u4oi8ftu","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":54,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"pbek25gfevvtl9g2sjeh","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":51,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"aq65l3cz8gooeejd8qe2","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":83,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"vf9hasuigwo87fv0x3we","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":75,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"7idff5pu1qrtq2sy8qxv","title":"locator.getByRole('link').nth(2).click","type":"step","stepType":"pw:api","duration":164,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:139:31"},{"id":"tuosohht4nhnig3zs7c2","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5029,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"feed the cat\",\u001b[39m\n\u001b[31m+   \"buy some cheese\",\u001b[39m\n\u001b[31m+   \"book a doctors appointment\",\u001b[39m\n\u001b[2m  ]\u001b[22m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 2 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:262:20"],"errorNum":1},{"id":"5b5plpk5wn9wwt05u8r6","title":"After Hooks","type":"step","stepType":"hook","duration":172,"location":"","subs":[{"id":"pu1edwd90iu41kxl7og2","title":"page.screenshot","type":"step","stepType":"pw:api","duration":76,"location":""},{"id":"st86ki2gzolx631c7ebq","title":"fixture: page","type":"step","stepType":"fixture","duration":1,"location":""},{"id":"ur7okimdixemn7ee0ioa","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"vbxxhcopnaok4680hvag","title":"Worker Cleanup","type":"step","stepType":"hook","duration":35,"location":"","subs":[{"id":"mz7d3ogq5hr6byczkrij","title":"fixture: browser","type":"step","stepType":"fixture","duration":33,"location":""}]},{"id":"ksjhpdn2hsovzwjpo908","title":"Retry #1","type":"step","stepType":"retry","status":"retry","retry":1},{"id":"1ej64mps9icmu8vq0nlh","title":"Before Hooks","type":"step","stepType":"hook","duration":1265,"location":"","subs":[{"id":"u127i8fkwlwz9yxjql1e","title":"beforeEach hook","type":"step","stepType":"hook","duration":933,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"rlnnfm0zlrmi6n37q867","title":"fixture: browser","type":"step","stepType":"fixture","duration":205,"location":"","subs":[{"id":"yzbeaklzs3fa5mat286e","title":"browserType.launch","type":"step","stepType":"pw:api","duration":199,"location":""}]},{"id":"rqusyt83tkidwp72fujl","title":"fixture: context","type":"step","stepType":"fixture","duration":49,"location":"","subs":[{"id":"g1hxavpxfjgsg4dlfiv4","title":"browser.newContext","type":"step","stepType":"pw:api","duration":22,"location":""}]},{"id":"ph8jiay18y6gx522mzxg","title":"fixture: page","type":"step","stepType":"fixture","duration":82,"location":"","subs":[{"id":"sso4mpb58bcvxw8feh4f","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":76,"location":""}]},{"id":"yj9i954sfcig6940tuh3","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":576,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"zygls6o4hg78h6lqqfdx","title":"beforeEach hook","type":"step","stepType":"hook","duration":330,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"e66dp3o3x4j95qgt5hm0","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":52,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"eylsittp2m1ued33wig4","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":42,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"xpzmv64krtkik43qul2y","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":22,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"vezdoqjpcop0ogitms3g","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"npbkqxzwyvkx13gn45ai","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"hzdo5z8pb5qt3n4buooq","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":27,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"b1hbf6v4kikqzpj084ro","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":62,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"ihlatfzkkqkcrhvx5t1t","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":38,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"sxz40dma77wyhh59d465","title":"locator.getByRole('link').nth(2).click","type":"step","stepType":"pw:api","duration":73,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:139:31"},{"id":"em9sf5i8rsfp9d59o9qe","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5013,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Array [\u001b[22m\n\u001b[32m-   \"feed the cat\",\u001b[39m\n\u001b[31m+   \"buy some cheese\",\u001b[39m\n\u001b[31m+   \"book a doctors appointment\",\u001b[39m\n\u001b[2m  ]\u001b[22m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 2 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:262:20"],"errorNum":1},{"id":"w5bx4yljmf5ijsd0r86u","title":"After Hooks","type":"step","stepType":"hook","duration":191,"location":"","subs":[{"id":"him5qjrlonugjo6hkeyk","title":"page.screenshot","type":"step","stepType":"pw:api","duration":94,"location":""},{"id":"9ny9c13squu6stmj8hoz","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"ho3596c8k23q9n05iqe5","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"uuwl8ym791du5vdog3u7","title":"Worker Cleanup","type":"step","stepType":"hook","duration":45,"location":"","subs":[{"id":"usqblfl1zipjanihbk1z","title":"fixture: browser","type":"step","stepType":"fixture","duration":43,"location":""}]}],"attachments":[{"name":"screenshot","path":"attachments/1e6e21925a29121e7f2fa8e1801b490346bd10dd.png","contentType":"image/png","retry":0},{"name":"_error-context-0","path":"attachments/ea1a5620943fa7e3315588dde0e9b23a33f6418e.markdown","contentType":"text/markdown","retry":0,"content":"# Test info\n\n- Name: Routing >> should allow me to display completed items\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:259:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 1\n+ Received  + 2\n\n  Array [\n-   \"feed the cat\",\n+   \"buy some cheese\",\n+   \"book a doctors appointment\",\n  ]\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 2 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:262:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/efcc208572b6b4597d01628185a7aaebdb5eaccb.zip","contentType":"application/zip","retry":0},{"name":"screenshot","path":"attachments/160c0e62238980d1ca667de9457eef4bd9ceb389.png","contentType":"image/png","retry":1},{"name":"_error-context-0","path":"attachments/3391cab7d9208e0baf0e9a869814f6bb952b09c7.markdown","contentType":"text/markdown","retry":1,"content":"# Test info\n\n- Name: Routing >> should allow me to display completed items\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:259:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 1\n+ Received  + 2\n\n  Array [\n-   \"feed the cat\",\n+   \"buy some cheese\",\n+   \"book a doctors appointment\",\n  ]\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 2 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:262:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/ea331004a83d79c240c1ac714a302addf06bb424.zip","contentType":"application/zip","retry":1}],"errorNum":2,"errorId":"tuosohht4nhnig3zs7c2"},{"id":"1cf5aa74928dd29dabbb","title":"should allow me to display all items","type":"case","caseType":"failed","ok":false,"outcome":"unexpected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:265:7","timestamps":[1746783705013,1746783705014,1746783705014,1746783705014],"duration":1,"tags":[],"timeout":30000,"retry":1,"status":"failed","stepNum":54,"stepFailed":2,"stepSubs":true,"subs":[{"id":"vyljhru194h24i5b4gfq","title":"Before Hooks","type":"step","stepType":"hook","duration":352,"location":"","subs":[{"id":"b25t9zj2uin7y1tb3kc0","title":"beforeEach hook","type":"step","stepType":"hook","duration":179,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"movhps7lbsn3pjrg9jk1","title":"fixture: context","type":"step","stepType":"fixture","duration":6,"location":"","subs":[{"id":"6znio3ubzqk1haot02si","title":"browser.newContext","type":"step","stepType":"pw:api","duration":2,"location":""}]},{"id":"845ic7gvz59fzb6k5lus","title":"fixture: page","type":"step","stepType":"fixture","duration":30,"location":"","subs":[{"id":"pw39s7lksw2bdllyf80u","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":29,"location":""}]},{"id":"oo2lq8gszbvtyw3iuzp2","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":141,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"mrqutn896yj01k0sr5ga","title":"beforeEach hook","type":"step","stepType":"hook","duration":173,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"kuloj0ag3xp40f1zzqgj","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":25,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"z9l5refyhrjedgexjt1s","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":23,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"glo4fm85q8mbsrv81z5y","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":18,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"yoem6xq0t43m49hzfsn1","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":14,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"d59m3qaxpage3mj1h05l","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":12,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"6bpzlrvqmrzm2u3dcm3j","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":15,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"257im9vghs8qbcigc6p0","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":32,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"14fgy8mk87rh39ysl1fg","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":23,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"mqi579zs39gv6iua1g43","title":"locator.getByRole('link').nth(1).click","type":"step","stepType":"pw:api","duration":36,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:135:31"},{"id":"5qfvqzti0ix2cm5lcpy1","title":"locator.getByRole('link').nth(2).click","type":"step","stepType":"pw:api","duration":34,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:139:31"},{"id":"igm0izwto8vk3gaxn83p","title":"locator.getByRole('link').first().click","type":"step","stepType":"pw:api","duration":169,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:131:31"},{"id":"shxoe0tffwzbxd7dqsup","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5028,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 5\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[32m- Array [\u001b[39m\n\u001b[32m-   \"buy some cheese\",\u001b[39m\n\u001b[32m-   \"feed the cat\",\u001b[39m\n\u001b[32m-   \"book a doctors appointment\",\u001b[39m\n\u001b[32m- ]\u001b[39m\n\u001b[31m+ Array []\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 0 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:270:20"],"errorNum":1},{"id":"3igkjbysbspuuh15k9xx","title":"After Hooks","type":"step","stepType":"hook","duration":496,"location":"","subs":[{"id":"fkpl4dhq59nkkkq2jawq","title":"page.screenshot","type":"step","stepType":"pw:api","duration":140,"location":""},{"id":"tl8aszl65myrtr49aycx","title":"fixture: page","type":"step","stepType":"fixture","duration":1,"location":""},{"id":"q7dd5iejjykm5em8c132","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"ecvjb2bqmgbvncwdjdbn","title":"Worker Cleanup","type":"step","stepType":"hook","duration":83,"location":"","subs":[{"id":"28v8rek9eltp9f9i66qr","title":"fixture: browser","type":"step","stepType":"fixture","duration":83,"location":""}]},{"id":"tl4rci6wxqj35zw0ekbt","title":"Retry #1","type":"step","stepType":"retry","status":"retry","retry":1},{"id":"vxu2shhyou8b4442b0zo","title":"Before Hooks","type":"step","stepType":"hook","duration":476,"location":"","subs":[{"id":"7w7ljwobsc7qw93729am","title":"beforeEach hook","type":"step","stepType":"hook","duration":297,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"4d9nm2owbnp460f9xanu","title":"fixture: browser","type":"step","stepType":"fixture","duration":91,"location":"","subs":[{"id":"269rbj77779gcr36ekv1","title":"browserType.launch","type":"step","stepType":"pw:api","duration":88,"location":""}]},{"id":"najuohdlmk5wkfww3zqz","title":"fixture: context","type":"step","stepType":"fixture","duration":17,"location":"","subs":[{"id":"n42dm0gk32kkxav9ubxp","title":"browser.newContext","type":"step","stepType":"pw:api","duration":7,"location":""}]},{"id":"r0d3hwbnb9eabrxbxk4m","title":"fixture: page","type":"step","stepType":"fixture","duration":34,"location":"","subs":[{"id":"y77dkor9bg0y5rrzlrvp","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":33,"location":""}]},{"id":"faqw3q0fdr2tqg0lhk2p","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":144,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"8ukotdamtn6xhqzq07ez","title":"beforeEach hook","type":"step","stepType":"hook","duration":177,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"thupdhso90hqpm1n1vt2","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":30,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"aj6kkjaryr6vi6o8xd6s","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":21,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"p8ayjyud6aoccpdnbk14","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":11,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"4jp8pgvf43txduz7uvrf","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":17,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"xsap0gel7mibns5tpxqc","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":9,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"fvjjp9is8rrhabg1m45o","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":13,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"6hmysuwwd8cvez78u5bu","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"8kku9ir0y5cu1y6tkwto","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":15,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"i9rzgbh8zz1e8oxlao9u","title":"locator.getByRole('link').nth(1).click","type":"step","stepType":"pw:api","duration":46,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:135:31"},{"id":"ybo6aq62iegew1r75kyw","title":"locator.getByRole('link').nth(2).click","type":"step","stepType":"pw:api","duration":33,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:139:31"},{"id":"3wh94j56gx1xfpq66113","title":"locator.getByRole('link').first().click","type":"step","stepType":"pw:api","duration":145,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:131:31"},{"id":"ivzgodnb8ccd8hc3iyht","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5060,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:30:38","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByTestId('todo-title')\n\u001b[32m- Expected  - 5\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[32m- Array [\u001b[39m\n\u001b[32m-   \"buy some cheese\",\u001b[39m\n\u001b[32m-   \"feed the cat\",\u001b[39m\n\u001b[32m-   \"book a doctors appointment\",\u001b[39m\n\u001b[32m- ]\u001b[39m\n\u001b[31m+ Array []\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByTestId('todo-title')\u001b[22m\n\u001b[2m    9 × locator resolved to 0 elements\u001b[22m\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:270:20"],"errorNum":1},{"id":"qrli8ecjxeeicu5doil9","title":"After Hooks","type":"step","stepType":"hook","duration":443,"location":"","subs":[{"id":"5v1nl4ipng3pdjkf115s","title":"page.screenshot","type":"step","stepType":"pw:api","duration":150,"location":""},{"id":"cvrylcgc20ouy88ul9pf","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"ageluk6htwl37jw7rcd7","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"a5pmixf73xilxrzw5vvc","title":"Worker Cleanup","type":"step","stepType":"hook","duration":53,"location":"","subs":[{"id":"lphaf9bbnz7m673qwgwf","title":"fixture: browser","type":"step","stepType":"fixture","duration":52,"location":""}]}],"attachments":[{"name":"screenshot","path":"attachments/48bba3d9ff1ab50c11c6a865c34086b5b342c966.png","contentType":"image/png","retry":0},{"name":"_error-context-0","path":"attachments/733921105dfeb8b47b6c090e63cffed7efdf8867.markdown","contentType":"text/markdown","retry":0,"content":"# Test info\n\n- Name: Routing >> should allow me to display all items\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:265:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"buy some cheese\",\n-   \"feed the cat\",\n-   \"book a doctors appointment\",\n- ]\n+ Array []\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 0 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:270:20\n```\n\n# Page snapshot\n\n```yaml\n- banner:\n  - img \"TodoMVC\"\n  - paragraph:\n    - text: Helping you\n    - strong: select\n    - text: an MV* framework\n  - navigation:\n    - link \"Download\":\n      - /url: https://github.com/tastejs/todomvc/archive/master.zip\n    - link \"View on GitHub\":\n      - /url: https://github.com/tastejs/todomvc\n    - link \"Blog\":\n      - /url: https://medium.com/@tastejs\n  - img \"TodoMVC\"\n- heading \"Introduction\" [level=2]\n- paragraph: Developers have a number of choices today when it comes to selecting a JavaScript framework or UI library for building scalable web apps.\n- paragraph: React / Next.js, Vue / Nuxt, Angular…the list of solutions continues to grow, but just how do you decide on which to use in a sea of so many options?\n- paragraph: To help you understand the options, we created TodoMVC - a project which has offered the same Todo applications implemented in popular JavaScript frameworks for the last decade.\n- paragraph:\n  - text: TodoMVC is useful for comparing syntax and solutions, is officially used in cross-browser benchmarks (e.g.\n  - link \"Speedometer\":\n    - /url: https://browserbench.org/Speedometer3.0/\n  - text: ) and aims to stay up to date as trends change over time.\n- iframe\n- iframe\n- iframe\n- heading \"Examples\" [level=2]\n- tablist:\n  - tab \"JavaScript\" [selected]\n  - tab \"Compile-to-JS\"\n  - tab \"Labs\"\n- paragraph: These are examples written in pure JavaScript.\n- list:\n  - listitem:\n    - link \"React New\":\n      - /url: examples/react/dist/\n  - listitem:\n    - link \"React Redux New\":\n      - /url: examples/react-redux/dist\n  - listitem:\n    - link \"Vue.js New\":\n      - /url: examples/vue/dist/\n  - listitem:\n    - link \"Preact New\":\n      - /url: examples/preact/dist/\n  - listitem:\n    - link \"Backbone.js New\":\n      - /url: examples/backbone/dist/\n  - listitem:\n    - link \"Angular New\":\n      - /url: examples/angular/dist/browser/\n  - listitem:\n    - link \"Ember.js New\":\n      - /url: examples/emberjs/todomvc/dist/\n  - listitem:\n    - link \"Lit New\":\n      - /url: examples/lit/dist/\n  - listitem:\n    - link \"KnockoutJS\":\n      - /url: examples/knockoutjs/\n  - listitem:\n    - link \"Dojo\":\n      - /url: examples/dojo/\n  - listitem:\n    - link \"Knockback.js\":\n      - /url: examples/knockback/\n  - listitem:\n    - link \"CanJS\":\n      - /url: examples/canjs/\n  - listitem:\n    - link \"Polymer\":\n      - /url: examples/polymer/index.html\n  - listitem:\n    - link \"Mithril\":\n      - /url: examples/mithril/\n  - listitem:\n    - link \"Marionette.js\":\n      - /url: examples/backbone_marionette/\n- separator\n- heading \"Compare these to a non-framework implementation\" [level=2]\n- list:\n  - listitem:\n    - link \"JavaScript ES5 New\":\n      - /url: examples/javascript-es5/dist/\n  - listitem:\n    - link \"JavaScript ES6 New\":\n      - /url: examples/javascript-es6/dist/\n  - listitem:\n    - link \"jQuery New\":\n      - /url: examples/jquery/dist/\n  - listitem:\n    - link \"Web Components New\":\n      - /url: examples/web-components/dist/\n- separator\n- list:\n  - listitem: New = New or updated app\n- separator\n- blockquote:\n  - paragraph: “ TodoMVC is an immensely valuable attempt at a difficult problem - providing a structured way of comparing JS libraries and frameworks. TodoMVC is a lone data point in a sea of conjecture and opinion. ”\n  - contentinfo:\n    - text: —\n    - link \"Justin Meyer\":\n      - /url: https://github.com/justinbmeyer\n- img \"Todo app screenshot\"\n- separator\n- heading \"New in 1.4\" [level=2]\n- list:\n  - listitem:\n    - text: ✔\n    - heading \"New Additions ✨\" [level=4]\n    - paragraph: To stay representative of frameworks & language features used on the web, we added a few new example apps.\n    - text: Examples ▼\n    - list:\n      - listitem:\n        - text: ✔\n        - link \"Angular 17\":\n          - /url: examples/angular/dist/browser/\n      - listitem:\n        - text: ✔\n        - link \"Lit\":\n          - /url: examples/lit/dist/\n      - listitem:\n        - text: ✔\n        - link \"Preact\":\n          - /url: examples/preact/dist/\n      - listitem:\n        - text: ✔\n        - link \"React Redux\":\n          - /url: examples/react-redux/dist/\n      - listitem:\n        - text: ✔\n        - link \"Svelte\":\n          - /url: examples/svelte/dist/\n      - listitem:\n        - text: ✔\n        - link \"Web Components\":\n          - /url: examples/web-components/dist/\n  - listitem:\n    - text: ✔\n    - heading \"Updated Versions 🧹\" [level=4]\n    - paragraph: Some updates to examples that were out-of-date, but still widely used on the web.\n    - text: Examples ▼\n    - list:\n      - listitem:\n        - text: ✔\n        - link \"Backbone\":\n          - /url: examples/backbone/dist/\n      - listitem:\n        - text: ✔\n        - link \"Ember\":\n          - /url: examples/emberjs/todomvc/dist/\n      - listitem:\n        - text: ✔\n        - link \"jQuery\":\n          - /url: examples/jquery/dist/\n      - listitem:\n        - text: ✔\n        - link \"React\":\n          - /url: examples/react/dist/\n      - listitem:\n        - text: ✔\n        - link \"Vue\":\n          - /url: examples/vue/dist/\n      - listitem:\n        - text: ✔\n        - link \"JavaScript ES5\":\n          - /url: examples/javascript-es5/\n      - listitem:\n        - text: ✔\n        - link \"JavaScript ES6\":\n          - /url: examples/javascript-es6/\n  - listitem: ✔ Misc. updates to the homepage.\n- heading \"Selecting a Framework\" [level=2]\n- paragraph: Once you've downloaded the latest release and played around with the apps, you'll want to decide on a specific framework to try out.\n- paragraph: Study the syntax required for defining models, views and (where applicable) controllers and classes in the frameworks you're interested in and try your hand at editing the code to see how it feels using it first-hand.\n- paragraph: Please ensure that if you're happy with this, you do spend more time investigating the framework (including reading the official docs, the source and its complete feature list). There's often a lot more to a framework than what we present in our examples.\n- heading \"Getting Involved\" [level=2]\n- paragraph: Is there a bug we haven't fixed or an MV* framework you feel would benefit from being included in TodoMVC?\n- paragraph:\n  - text: If so, feel free to fork the repo, read our\n  - link \"contribution guidelines\":\n    - /url: https://github.com/tastejs/todomvc/wiki\n  - text: \", and submit a pull request — we'll be happy to review it for inclusion.\"\n- paragraph:\n  - text: Make sure you use the\n  - link \"template\":\n    - /url: https://github.com/tastejs/todomvc-app-template\n  - text: as a starting point and read the\n  - link \"app specification\":\n    - /url: https://github.com/tastejs/todomvc/blob/master/app-spec.md\n  - text: .\n- paragraph:\n  - link \"Submit Pull Request »\":\n    - /url: https://github.com/tastejs/todomvc/wiki\n- separator\n- contentinfo:\n  - paragraph:\n    - text: Brought to you by\n    - link \"Addy OsmaniAddy\":\n      - /url: https://github.com/addyosmani\n      - img \"Addy Osmani\"\n      - text: Addy\n    - link \"Sindre SorhusSindre\":\n      - /url: https://github.com/sindresorhus\n      - img \"Sindre Sorhus\"\n      - text: Sindre\n    - link \"Pascal HartigPascal\":\n      - /url: https://github.com/passy\n      - img \"Pascal Hartig\"\n      - text: Pascal\n    - link \"Stephen SawchukStephen\":\n      - /url: https://github.com/stephenplusplus\n      - img \"Stephen Sawchuk\"\n      - text: Stephen\n    - link \"Colin EberhardtColin\":\n      - /url: https://github.com/colineberhardt\n      - img \"Colin Eberhardt\"\n      - text: Colin\n    - link \"Arthur VerschaeveArthur\":\n      - /url: https://github.com/arthurvr\n      - img \"Arthur Verschaeve\"\n      - text: Arthur\n    - link \"Sam SacconeSam\":\n      - /url: https://github.com/samccone\n      - img \"Sam Saccone\"\n      - text: Sam\n    - link \"Sam SacconeFady\":\n      - /url: https://github.com/FadySamirSadek\n      - img \"Sam Saccone\"\n      - text: Fady\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/743f34e201b6be29c382ccc1014e44537d9a6a7d.zip","contentType":"application/zip","retry":0},{"name":"screenshot","path":"attachments/de4354244f24730c2bdd95188509c6536fc3f8d0.png","contentType":"image/png","retry":1},{"name":"_error-context-0","path":"attachments/7332dc45155714b0d95a52f909a1e9a626327eab.markdown","contentType":"text/markdown","retry":1,"content":"# Test info\n\n- Name: Routing >> should allow me to display all items\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:265:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByTestId('todo-title')\n- Expected  - 5\n+ Received  + 1\n\n- Array [\n-   \"buy some cheese\",\n-   \"feed the cat\",\n-   \"book a doctors appointment\",\n- ]\n+ Array []\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByTestId('todo-title')\n    9 × locator resolved to 0 elements\n\n    at TodoPage.checkSavedTodoItems (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:30:38)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:270:20\n```\n\n# Page snapshot\n\n```yaml\n- banner:\n  - img \"TodoMVC\"\n  - paragraph:\n    - text: Helping you\n    - strong: select\n    - text: an MV* framework\n  - navigation:\n    - link \"Download\":\n      - /url: https://github.com/tastejs/todomvc/archive/master.zip\n    - link \"View on GitHub\":\n      - /url: https://github.com/tastejs/todomvc\n    - link \"Blog\":\n      - /url: https://medium.com/@tastejs\n  - img \"TodoMVC\"\n- heading \"Introduction\" [level=2]\n- paragraph: Developers have a number of choices today when it comes to selecting a JavaScript framework or UI library for building scalable web apps.\n- paragraph: React / Next.js, Vue / Nuxt, Angular…the list of solutions continues to grow, but just how do you decide on which to use in a sea of so many options?\n- paragraph: To help you understand the options, we created TodoMVC - a project which has offered the same Todo applications implemented in popular JavaScript frameworks for the last decade.\n- paragraph:\n  - text: TodoMVC is useful for comparing syntax and solutions, is officially used in cross-browser benchmarks (e.g.\n  - link \"Speedometer\":\n    - /url: https://browserbench.org/Speedometer3.0/\n  - text: ) and aims to stay up to date as trends change over time.\n- iframe\n- iframe\n- iframe\n- heading \"Examples\" [level=2]\n- tablist:\n  - tab \"JavaScript\" [selected]\n  - tab \"Compile-to-JS\"\n  - tab \"Labs\"\n- paragraph: These are examples written in pure JavaScript.\n- list:\n  - listitem:\n    - link \"React New\":\n      - /url: examples/react/dist/\n  - listitem:\n    - link \"React Redux New\":\n      - /url: examples/react-redux/dist\n  - listitem:\n    - link \"Vue.js New\":\n      - /url: examples/vue/dist/\n  - listitem:\n    - link \"Preact New\":\n      - /url: examples/preact/dist/\n  - listitem:\n    - link \"Backbone.js New\":\n      - /url: examples/backbone/dist/\n  - listitem:\n    - link \"Angular New\":\n      - /url: examples/angular/dist/browser/\n  - listitem:\n    - link \"Ember.js New\":\n      - /url: examples/emberjs/todomvc/dist/\n  - listitem:\n    - link \"Lit New\":\n      - /url: examples/lit/dist/\n  - listitem:\n    - link \"KnockoutJS\":\n      - /url: examples/knockoutjs/\n  - listitem:\n    - link \"Dojo\":\n      - /url: examples/dojo/\n  - listitem:\n    - link \"Knockback.js\":\n      - /url: examples/knockback/\n  - listitem:\n    - link \"CanJS\":\n      - /url: examples/canjs/\n  - listitem:\n    - link \"Polymer\":\n      - /url: examples/polymer/index.html\n  - listitem:\n    - link \"Mithril\":\n      - /url: examples/mithril/\n  - listitem:\n    - link \"Marionette.js\":\n      - /url: examples/backbone_marionette/\n- separator\n- heading \"Compare these to a non-framework implementation\" [level=2]\n- list:\n  - listitem:\n    - link \"JavaScript ES5 New\":\n      - /url: examples/javascript-es5/dist/\n  - listitem:\n    - link \"JavaScript ES6 New\":\n      - /url: examples/javascript-es6/dist/\n  - listitem:\n    - link \"jQuery New\":\n      - /url: examples/jquery/dist/\n  - listitem:\n    - link \"Web Components New\":\n      - /url: examples/web-components/dist/\n- separator\n- list:\n  - listitem: New = New or updated app\n- separator\n- blockquote:\n  - paragraph: “ TodoMVC is an immensely valuable attempt at a difficult problem - providing a structured way of comparing JS libraries and frameworks. TodoMVC is a lone data point in a sea of conjecture and opinion. ”\n  - contentinfo:\n    - text: —\n    - link \"Justin Meyer\":\n      - /url: https://github.com/justinbmeyer\n- img \"Todo app screenshot\"\n- separator\n- heading \"New in 1.4\" [level=2]\n- list:\n  - listitem:\n    - text: ✔\n    - heading \"New Additions ✨\" [level=4]\n    - paragraph: To stay representative of frameworks & language features used on the web, we added a few new example apps.\n    - text: Examples ▼\n    - list:\n      - listitem:\n        - text: ✔\n        - link \"Angular 17\":\n          - /url: examples/angular/dist/browser/\n      - listitem:\n        - text: ✔\n        - link \"Lit\":\n          - /url: examples/lit/dist/\n      - listitem:\n        - text: ✔\n        - link \"Preact\":\n          - /url: examples/preact/dist/\n      - listitem:\n        - text: ✔\n        - link \"React Redux\":\n          - /url: examples/react-redux/dist/\n      - listitem:\n        - text: ✔\n        - link \"Svelte\":\n          - /url: examples/svelte/dist/\n      - listitem:\n        - text: ✔\n        - link \"Web Components\":\n          - /url: examples/web-components/dist/\n  - listitem:\n    - text: ✔\n    - heading \"Updated Versions 🧹\" [level=4]\n    - paragraph: Some updates to examples that were out-of-date, but still widely used on the web.\n    - text: Examples ▼\n    - list:\n      - listitem:\n        - text: ✔\n        - link \"Backbone\":\n          - /url: examples/backbone/dist/\n      - listitem:\n        - text: ✔\n        - link \"Ember\":\n          - /url: examples/emberjs/todomvc/dist/\n      - listitem:\n        - text: ✔\n        - link \"jQuery\":\n          - /url: examples/jquery/dist/\n      - listitem:\n        - text: ✔\n        - link \"React\":\n          - /url: examples/react/dist/\n      - listitem:\n        - text: ✔\n        - link \"Vue\":\n          - /url: examples/vue/dist/\n      - listitem:\n        - text: ✔\n        - link \"JavaScript ES5\":\n          - /url: examples/javascript-es5/\n      - listitem:\n        - text: ✔\n        - link \"JavaScript ES6\":\n          - /url: examples/javascript-es6/\n  - listitem: ✔ Misc. updates to the homepage.\n- heading \"Selecting a Framework\" [level=2]\n- paragraph: Once you've downloaded the latest release and played around with the apps, you'll want to decide on a specific framework to try out.\n- paragraph: Study the syntax required for defining models, views and (where applicable) controllers and classes in the frameworks you're interested in and try your hand at editing the code to see how it feels using it first-hand.\n- paragraph: Please ensure that if you're happy with this, you do spend more time investigating the framework (including reading the official docs, the source and its complete feature list). There's often a lot more to a framework than what we present in our examples.\n- heading \"Getting Involved\" [level=2]\n- paragraph: Is there a bug we haven't fixed or an MV* framework you feel would benefit from being included in TodoMVC?\n- paragraph:\n  - text: If so, feel free to fork the repo, read our\n  - link \"contribution guidelines\":\n    - /url: https://github.com/tastejs/todomvc/wiki\n  - text: \", and submit a pull request — we'll be happy to review it for inclusion.\"\n- paragraph:\n  - text: Make sure you use the\n  - link \"template\":\n    - /url: https://github.com/tastejs/todomvc-app-template\n  - text: as a starting point and read the\n  - link \"app specification\":\n    - /url: https://github.com/tastejs/todomvc/blob/master/app-spec.md\n  - text: .\n- paragraph:\n  - link \"Submit Pull Request »\":\n    - /url: https://github.com/tastejs/todomvc/wiki\n- separator\n- contentinfo:\n  - paragraph:\n    - text: Brought to you by\n    - link \"Addy OsmaniAddy\":\n      - /url: https://github.com/addyosmani\n      - img \"Addy Osmani\"\n      - text: Addy\n    - link \"Sindre SorhusSindre\":\n      - /url: https://github.com/sindresorhus\n      - img \"Sindre Sorhus\"\n      - text: Sindre\n    - link \"Pascal HartigPascal\":\n      - /url: https://github.com/passy\n      - img \"Pascal Hartig\"\n      - text: Pascal\n    - link \"Stephen SawchukStephen\":\n      - /url: https://github.com/stephenplusplus\n      - img \"Stephen Sawchuk\"\n      - text: Stephen\n    - link \"Colin EberhardtColin\":\n      - /url: https://github.com/colineberhardt\n      - img \"Colin Eberhardt\"\n      - text: Colin\n    - link \"Arthur VerschaeveArthur\":\n      - /url: https://github.com/arthurvr\n      - img \"Arthur Verschaeve\"\n      - text: Arthur\n    - link \"Sam SacconeSam\":\n      - /url: https://github.com/samccone\n      - img \"Sam Saccone\"\n      - text: Sam\n    - link \"Sam SacconeFady\":\n      - /url: https://github.com/FadySamirSadek\n      - img \"Sam Saccone\"\n      - text: Fady\n```\n\n# Test source\n\n```ts\n   1 | import { expect, Locator, Page } from \"@playwright/test\";\n   2 |\n   3 | export class TodoPage {\n   4 |   private page: Page;\n   5 |   private todoEntryField: Locator;\n   6 |   private todoItemSaved: Locator;\n   7 |   private todoItems: Locator;\n   8 |   private toggleAllCheckbox: Locator;\n   9 |   private todoCount: Locator;\n   10 |   private clearCompletedButton: Locator;\n   11 |   private filters: Locator;\n   12 |\n   13 |   constructor(page: Page) {\n   14 |     this.page = page;\n   15 |     this.todoEntryField = this.page.getByPlaceholder(\"What needs to be done?\");\n   16 |     this.todoItemSaved = this.page.getByTestId(\"todo-title\");\n   17 |     this.todoItems = this.page.getByTestId(\"todo-item\");\n   18 |     this.toggleAllCheckbox = this.page.getByLabel(\"Mark all as complete\");\n   19 |     this.todoCount = this.page.getByTestId(\"todo-count\");\n   20 |     this.clearCompletedButton = this.page.getByRole(\"button\", { name: \"Clear completed\" });\n   21 |     this.filters = this.page.getByRole(\"link\");\n   22 |   }\n   23 |\n   24 |   async createATodoItem(todoItemName: string) {\n   25 |     await this.todoEntryField.fill(todoItemName);\n   26 |     await this.todoEntryField.press(\"Enter\");\n   27 |   }\n   28 |\n   29 |   async checkSavedTodoItems(todoItemName: readonly string[]) {\n>  30 |     await expect(this.todoItemSaved).toHaveText([...todoItemName]);\n      |                                      ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n   31 |   }\n   32 |\n   33 |   async verifyTodoInputEmpty() {\n   34 |     await expect(this.todoEntryField).toBeEmpty();\n   35 |   }\n   36 |\n   37 |   async createDefaultTodos(items: readonly string[]) {\n   38 |     for (const item of items) {\n   39 |       await this.createATodoItem(item);\n   40 |     }\n   41 |   }\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n```"},{"name":"trace","path":"attachments/e151710a8d0d66dbf6149422430eef23e28dd7b9.zip","contentType":"application/zip","retry":1}],"errorNum":2,"errorId":"shxoe0tffwzbxd7dqsup"},{"id":"198a90c24813d7275225","title":"should highlight the currently applied filter","type":"case","caseType":"failed","ok":false,"outcome":"unexpected","expectedStatus":"passed","location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:273:7","timestamps":[1746783705014,1746783705014,1746783705014,1746783705014],"duration":0,"tags":[],"timeout":30000,"retry":1,"status":"failed","stepNum":50,"stepFailed":2,"stepSubs":true,"subs":[{"id":"ahacv7a5wp5t1usr3fuc","title":"Before Hooks","type":"step","stepType":"hook","duration":782,"location":"","subs":[{"id":"igvjplm6rid7f65tuswg","title":"beforeEach hook","type":"step","stepType":"hook","duration":427,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"rmdd7hxh8i9c3p2mydah","title":"fixture: browser","type":"step","stepType":"fixture","duration":132,"location":"","subs":[{"id":"bytt3fb4j7i408kn9btd","title":"browserType.launch","type":"step","stepType":"pw:api","duration":128,"location":""}]},{"id":"ghbksrq6ucbjnvzgt6lt","title":"fixture: context","type":"step","stepType":"fixture","duration":24,"location":"","subs":[{"id":"oar6x50uh8wkfyk1j9zv","title":"browser.newContext","type":"step","stepType":"pw:api","duration":8,"location":""}]},{"id":"4n73ioi81wkyouhciiwv","title":"fixture: page","type":"step","stepType":"fixture","duration":49,"location":"","subs":[{"id":"gfz9ksfotohvfrlogaq4","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":46,"location":""}]},{"id":"s9u34yfkkk2tgo7f71du","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":210,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"nkjwke600z8pmilztatn","title":"beforeEach hook","type":"step","stepType":"hook","duration":354,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"toikg6ky7aw1smzextue","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":49,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"00gd3pa2pyyai7ygu8gu","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":37,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"tlb0jzd9y7cvzraamx4y","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":25,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"zj4cxr6jni7qszzjetva","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":23,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ugwctr5pdf4lp38uy8w6","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":34,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"9s7iec85svb853jjfz7h","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":43,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"ixur5ik2ip0c691wel4k","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":75,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"istvn4ljweqjqotdkjlf","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":49,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"vms80hnz49ns1b854ee8","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5029,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:142:80","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByRole('link').filter({ has: locator('.selected') })\nExpected string: \u001b[32m\"All\"\u001b[39m\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link').filter({ has: locator('.selected') })\u001b[22m\n\n    at TodoPage.verifyFilterSelected (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:142:80)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:275:20"],"errorNum":1},{"id":"3gbgtgeanrbbn44l0xas","title":"After Hooks","type":"step","stepType":"hook","duration":119,"location":"","subs":[{"id":"9edi7o7gq7mu9vhi31x1","title":"page.screenshot","type":"step","stepType":"pw:api","duration":61,"location":""},{"id":"p5s4fmuobbgfczws0oeo","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"om98qkwlai0k6fah9645","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"ew6mfl8d2cnyzwyal73g","title":"Worker Cleanup","type":"step","stepType":"hook","duration":31,"location":"","subs":[{"id":"fvbgc5u5q3i6l6s37non","title":"fixture: browser","type":"step","stepType":"fixture","duration":31,"location":""}]},{"id":"ll2rqtvlkppt08ulo4y8","title":"Retry #1","type":"step","stepType":"retry","status":"retry","retry":1},{"id":"2juribyisg9aht5c8q6e","title":"Before Hooks","type":"step","stepType":"hook","duration":474,"location":"","subs":[{"id":"qvypts74n1vgzco3tgmq","title":"beforeEach hook","type":"step","stepType":"hook","duration":294,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:7:6","subs":[{"id":"fcg1nbz5qcpm575m2hqv","title":"fixture: browser","type":"step","stepType":"fixture","duration":89,"location":"","subs":[{"id":"j2z1y6szbnlaaesisij0","title":"browserType.launch","type":"step","stepType":"pw:api","duration":87,"location":""}]},{"id":"uqcf2ttv04bux4hk86yi","title":"fixture: context","type":"step","stepType":"fixture","duration":19,"location":"","subs":[{"id":"oc37navpzylasz3ttvc5","title":"browser.newContext","type":"step","stepType":"pw:api","duration":7,"location":""}]},{"id":"qdpa1htujzg4gpjfaw0r","title":"fixture: page","type":"step","stepType":"fixture","duration":36,"location":"","subs":[{"id":"8a55utbdbqasmtjwnbum","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":34,"location":""}]},{"id":"swn4ykbd1yn5v52hoeav","title":"page.goto(https://demo.playwright.dev/todomvc)","type":"step","stepType":"pw:api","duration":139,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:8:14"}]},{"id":"jlq9bmkix1xyp6nre3qp","title":"beforeEach hook","type":"step","stepType":"hook","duration":179,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:235:8","subs":[{"id":"53qeqcnvujepg6115xmn","title":"locator.fill(buy some cheese)","type":"step","stepType":"pw:api","duration":29,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"5gwnen73izkd4vkxgoq9","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":20,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"a1tvj7hn7f8iwyqg2729","title":"locator.fill(feed the cat)","type":"step","stepType":"pw:api","duration":11,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"kkvrfzs4txr4b6umgopa","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":14,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"y9q19q3eussd67ihbfzm","title":"locator.fill(book a doctors appointment)","type":"step","stepType":"pw:api","duration":14,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:25:31"},{"id":"4u7hwmu375ka6yr6gmgo","title":"locator.getByPlaceholder('What needs to be done?').press(Enter)","type":"step","stepType":"pw:api","duration":13,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:26:31"},{"id":"61seskp9rta19ohd385r","title":"locator.getByTestId('todo-item').nth(1).getByRole('checkbox').check","type":"step","stepType":"pw:api","duration":48,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:65:38"},{"id":"zsvq4h4lrnllsuj0q8jw","title":"page.waitForFunction","type":"step","stepType":"pw:api","duration":15,"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:290:21"}]}]},{"id":"at266hl7q7o4tkoqzkfp","title":"expect.toHaveText","type":"step","stepType":"expect","duration":5008,"location":"src/configurations/src/page-objects/todo-page/todo-page.ts:142:80","errors":["Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveText\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: getByRole('link').filter({ has: locator('.selected') })\nExpected string: \u001b[32m\"All\"\u001b[39m\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - expect.toHaveText with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link').filter({ has: locator('.selected') })\u001b[22m\n\n    at TodoPage.verifyFilterSelected (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:142:80)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:275:20"],"errorNum":1},{"id":"c9ma6cihvwv9s8lgjz4a","title":"After Hooks","type":"step","stepType":"hook","duration":117,"location":"","subs":[{"id":"417y1ioyj0xd3qzgodvz","title":"page.screenshot","type":"step","stepType":"pw:api","duration":59,"location":""},{"id":"asiw7jfi840c9i778cjf","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"mmzjzlbp8h13fb9n1f8j","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]},{"id":"foezk9fk4vo511y5783m","title":"Worker Cleanup","type":"step","stepType":"hook","duration":29,"location":"","subs":[{"id":"ob2dwfk4h7lsmcoxwm1q","title":"fixture: browser","type":"step","stepType":"fixture","duration":28,"location":""}]}],"attachments":[{"name":"screenshot","path":"attachments/7afda51de6f27551c6e26885f180fe06df4fbe45.png","contentType":"image/png","retry":0},{"name":"_error-context-0","path":"attachments/23fcfac98952fb31341f96abbe2beadfcfd13298.markdown","contentType":"text/markdown","retry":0,"content":"# Test info\n\n- Name: Routing >> should highlight the currently applied filter\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:273:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByRole('link').filter({ has: locator('.selected') })\nExpected string: \"All\"\nReceived: <element(s) not found>\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByRole('link').filter({ has: locator('.selected') })\n\n    at TodoPage.verifyFilterSelected (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:142:80)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:275:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\" [checked]\n    - text: feed the cat\n    - button \"Delete\": ×\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n  131 |     await this.filters.nth(0).click();\n  132 |   }\n  133 |\n  134 |   async filterActive() {\n  135 |     await this.filters.nth(1).click();\n  136 |   }\n  137 |\n  138 |   async filterCompleted() {\n  139 |     await this.filters.nth(2).click();\n  140 |   }\n  141 |   async verifyFilterSelected(filterName: string) {\n> 142 |     await expect(this.filters.filter({ has: this.page.locator('.selected') })).toHaveText(filterName);\n      |                                                                                ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n  143 |   }\n  144 | }\n  145 |\n```"},{"name":"trace","path":"attachments/be524fbf8271d842a7bc9d525c93d897cdc4e1be.zip","contentType":"application/zip","retry":0},{"name":"screenshot","path":"attachments/e07c1e7c3806d1acbaea4be368a128255d2d4316.png","contentType":"image/png","retry":1},{"name":"_error-context-0","path":"attachments/bf6eda089c768bd691325f87cfabc937c9606bc5.markdown","contentType":"text/markdown","retry":1,"content":"# Test info\n\n- Name: Routing >> should highlight the currently applied filter\n- Location: /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:273:7\n\n# Error details\n\n```\nError: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n\nLocator: getByRole('link').filter({ has: locator('.selected') })\nExpected string: \"All\"\nReceived: <element(s) not found>\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for getByRole('link').filter({ has: locator('.selected') })\n\n    at TodoPage.verifyFilterSelected (/__w/refresh-playwright/refresh-playwright/src/page-objects/todo-page/todo-page.ts:142:80)\n    at /__w/refresh-playwright/refresh-playwright/tests/e2e/demo-todo-app.spec.ts:275:20\n```\n\n# Page snapshot\n\n```yaml\n- text: This is just a demo of TodoMVC for testing, not the\n- link \"real TodoMVC app.\":\n  - /url: https://todomvc.com/\n- heading \"todos\" [level=1]\n- textbox \"What needs to be done?\"\n- checkbox \"❯Mark all as complete\"\n- text: ❯Mark all as complete\n- list:\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: buy some cheese\n  - listitem:\n    - checkbox \"Toggle Todo\" [checked]\n    - text: feed the cat\n    - button \"Delete\": ×\n  - listitem:\n    - checkbox \"Toggle Todo\"\n    - text: book a doctors appointment\n- strong: \"2\"\n- text: items left\n- list:\n  - listitem:\n    - link \"All\":\n      - /url: \"#/\"\n  - listitem:\n    - link \"Active\":\n      - /url: \"#/active\"\n  - listitem:\n    - link \"Completed\":\n      - /url: \"#/completed\"\n- button \"Clear completed\"\n- contentinfo:\n  - paragraph: Double-click to edit a todo\n  - paragraph:\n    - text: Created by\n    - link \"Remo H. Jansen\":\n      - /url: http://github.com/remojansen/\n  - paragraph:\n    - text: Part of\n    - link \"TodoMVC\":\n      - /url: http://todomvc.com\n```\n\n# Test source\n\n```ts\n   42 |\n   43 |   async verifyTodoCount(count: number) {\n   44 |     await expect(this.todoCount).toContainText(`${count}`);\n   45 |   }\n   46 |\n   47 |   async markAllAsComplete() {\n   48 |     await this.toggleAllCheckbox.check();\n   49 |   }\n   50 |\n   51 |   async unMarkAllAsComplete() {\n   52 |     await this.toggleAllCheckbox.uncheck();\n   53 |   }\n   54 |\n   55 |   async verifyAllTodosCompleted() {\n   56 |     await expect(this.todoItems).toHaveClass([\"completed\", \"completed\", \"completed\"]);\n   57 |   }\n   58 |\n   59 |   async verifyNoTodosCompleted() {\n   60 |     await expect(this.todoItems).toHaveClass([\"\", \"\", \"\"]);\n   61 |   }\n   62 |\n   63 |   async toggleTodoItem(index: number) {\n   64 |     const todo = this.todoItems.nth(index);\n   65 |     await todo.getByRole(\"checkbox\").check();\n   66 |   }\n   67 |\n   68 |   async unToggleTodoItem(index: number) {\n   69 |     const todo = this.todoItems.nth(index);\n   70 |     await todo.getByRole(\"checkbox\").uncheck();\n   71 |   }\n   72 |\n   73 |   async verifyTodoItemCompleted(index: number) {\n   74 |     const todo = this.todoItems.nth(index);\n   75 |     await expect(todo).toHaveClass(\"completed\");\n   76 |   }\n   77 |\n   78 |   async verifyTodoItemNotCompleted(index: number) {\n   79 |     const todo = this.todoItems.nth(index);\n   80 |     await expect(todo).not.toHaveClass(\"completed\");\n   81 |   }\n   82 |\n   83 |   async verifyToggleAllChecked() {\n   84 |     await expect(this.toggleAllCheckbox).toBeChecked();\n   85 |   }\n   86 |\n   87 |   async verifyToggleAllNotChecked() {\n   88 |     await expect(this.toggleAllCheckbox).not.toBeChecked();\n   89 |   }\n   90 |\n   91 |   async editTodoItem(index: number, newText: string) {\n   92 |     const todo = this.todoItems.nth(index);\n   93 |     await todo.dblclick();\n   94 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n   95 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Enter\");\n   96 |   }\n   97 |\n   98 |   async verifyEditMode(index: number) {\n   99 |     const todo = this.todoItems.nth(index);\n  100 |     await expect(todo.getByRole(\"checkbox\")).not.toBeVisible();\n  101 |     await expect(todo.locator(\"label\")).not.toBeVisible();\n  102 |   }\n  103 |\n  104 |   async editTodoItemAndBlur(index: number, newText: string) {\n  105 |     const todo = this.todoItems.nth(index);\n  106 |     await todo.dblclick();\n  107 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  108 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).dispatchEvent(\"blur\");\n  109 |   }\n  110 |\n  111 |   async cancelEdit(index: number, newText: string) {\n  112 |     const todo = this.todoItems.nth(index);\n  113 |     await todo.dblclick();\n  114 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).fill(newText);\n  115 |     await todo.getByRole(\"textbox\", { name: \"Edit\" }).press(\"Escape\");\n  116 |   }\n  117 |\n  118 |   async clearCompleted() {\n  119 |     await this.clearCompletedButton.click();\n  120 |   }\n  121 |\n  122 |   async verifyClearCompletedVisible() {\n  123 |     await expect(this.clearCompletedButton).toBeVisible();\n  124 |   }\n  125 |\n  126 |   async verifyClearCompletedHidden() {\n  127 |     await expect(this.clearCompletedButton).toBeHidden();\n  128 |   }\n  129 |\n  130 |   async filterAll() {\n  131 |     await this.filters.nth(0).click();\n  132 |   }\n  133 |\n  134 |   async filterActive() {\n  135 |     await this.filters.nth(1).click();\n  136 |   }\n  137 |\n  138 |   async filterCompleted() {\n  139 |     await this.filters.nth(2).click();\n  140 |   }\n  141 |   async verifyFilterSelected(filterName: string) {\n> 142 |     await expect(this.filters.filter({ has: this.page.locator('.selected') })).toHaveText(filterName);\n      |                                                                                ^ Error: Timed out 5000ms waiting for expect(locator).toHaveText(expected)\n  143 |   }\n  144 | }\n  145 |\n```"},{"name":"trace","path":"attachments/fc5b47a037bb7a5299295eb3326a955c7030dc6e.zip","contentType":"application/zip","retry":1}],"errorNum":2,"errorId":"vms80hnz49ns1b854ee8"}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:234:6"}],"location":"src/configurations/tests/e2e/demo-todo-app.spec.ts:0:0"},{"id":"b4a699c9a716977a5094","title":"example.spec.ts","type":"suite","suiteType":"file","caseNum":2,"subs":[{"id":"a79567ff556aa140ad83","title":"Playwright Example Tests","type":"suite","suiteType":"describe","caseNum":2,"subs":[{"id":"e59a62f29807f97b58e3","title":"has title","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/example.spec.ts:9:7","timestamps":[1746783705014,1746783705014],"duration":0,"tags":["@smoke","@critical"],"timeout":30000,"retry":0,"status":"passed","stepNum":13,"stepFailed":0,"stepSubs":true,"subs":[{"id":"dml65gk0pih331pj80g4","title":"Before Hooks","type":"step","stepType":"hook","duration":497,"location":"","subs":[{"id":"mvnp0lzopxjgq9bxcfw5","title":"beforeEach hook","type":"step","stepType":"hook","duration":494,"location":"src/configurations/tests/e2e/example.spec.ts:5:8","subs":[{"id":"9vqhcpyz8knkftzv9k4n","title":"fixture: browser","type":"step","stepType":"fixture","duration":136,"location":"","subs":[{"id":"jxvgs9m9c2yep72nmyb0","title":"browserType.launch","type":"step","stepType":"pw:api","duration":131,"location":""}]},{"id":"tdhplx6wayiddmv1c89v","title":"fixture: context","type":"step","stepType":"fixture","duration":27,"location":"","subs":[{"id":"4n2xsefxr0d5woop204o","title":"browser.newContext","type":"step","stepType":"pw:api","duration":10,"location":""}]},{"id":"c2hmjhrq0g3dw7rfxmbc","title":"fixture: page","type":"step","stepType":"fixture","duration":50,"location":"","subs":[{"id":"3c4yjlxi80qew3ynk77d","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":49,"location":""}]},{"id":"2gqr8tjcxo6h9yi3dwbw","title":"page.goto(https://playwright.dev/)","type":"step","stepType":"pw:api","duration":267,"location":"src/configurations/tests/e2e/example.spec.ts:6:16"}]}]},{"id":"bjo1cw295fyqx5q8ydi9","title":"expect.toHaveTitle","type":"step","stepType":"expect","duration":114,"location":"src/configurations/tests/e2e/example.spec.ts:11:24"},{"id":"6bn5lgltesww03pdhemb","title":"After Hooks","type":"step","stepType":"hook","duration":155,"location":"","subs":[{"id":"5ihfyxx65tqyibjp7240","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"b1t0yyb0q3h240ynwyly","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]},{"id":"06a7195bce00102b7f1e","title":"get started link","type":"case","caseType":"passed","ok":true,"outcome":"expected","expectedStatus":"passed","location":"src/configurations/tests/e2e/example.spec.ts:14:7","timestamps":[1746783705014,1746783705014],"duration":0,"tags":["@smoke","@critical"],"timeout":30000,"retry":0,"status":"passed","stepNum":14,"stepFailed":0,"stepSubs":true,"subs":[{"id":"fwut2bpnsdri4dqzlyee","title":"Before Hooks","type":"step","stepType":"hook","duration":483,"location":"","subs":[{"id":"u7mxul6mctgsorjbdysv","title":"beforeEach hook","type":"step","stepType":"hook","duration":482,"location":"src/configurations/tests/e2e/example.spec.ts:5:8","subs":[{"id":"hgeg12gmlet1xwj8xsuo","title":"fixture: browser","type":"step","stepType":"fixture","duration":117,"location":"","subs":[{"id":"p3ebfb5u0lan62epvm7i","title":"browserType.launch","type":"step","stepType":"pw:api","duration":113,"location":""}]},{"id":"yikjsh73swri60pp2eqi","title":"fixture: context","type":"step","stepType":"fixture","duration":24,"location":"","subs":[{"id":"h86hs35xx2e489kt6la9","title":"browser.newContext","type":"step","stepType":"pw:api","duration":8,"location":""}]},{"id":"yho780bmp72ttk59ajwd","title":"fixture: page","type":"step","stepType":"fixture","duration":53,"location":"","subs":[{"id":"ww2sn4sgld0y74jbrw3p","title":"browserContext.newPage","type":"step","stepType":"pw:api","duration":51,"location":""}]},{"id":"lli71cuz7dn2zm2ezsu5","title":"page.goto(https://playwright.dev/)","type":"step","stepType":"pw:api","duration":271,"location":"src/configurations/tests/e2e/example.spec.ts:6:16"}]}]},{"id":"ni0iblr64fq62w8891br","title":"locator.getByRole('link', { name: 'Get started' }).click","type":"step","stepType":"pw:api","duration":277,"location":"src/configurations/tests/e2e/example.spec.ts:16:59"},{"id":"ba3bihrajckzml5qlt4z","title":"expect.toBeVisible","type":"step","stepType":"expect","duration":117,"location":"src/configurations/tests/e2e/example.spec.ts:19:71"},{"id":"z9njjs00h3av9hn7rlxn","title":"After Hooks","type":"step","stepType":"hook","duration":136,"location":"","subs":[{"id":"y3n2p42u5b7k4zjya5gp","title":"fixture: page","type":"step","stepType":"fixture","duration":0,"location":""},{"id":"zqw4jcgmmfeo0xqb9kud","title":"fixture: context","type":"step","stepType":"fixture","duration":0,"location":""}]}]}],"location":"src/configurations/tests/e2e/example.spec.ts:3:6"}],"location":"src/configurations/tests/e2e/example.spec.ts:0:0"}]}],"formatters":{},"suiteTypes":["project","file","describe","shard"],"caseTypes":["failed","flaky","skipped","passed"],"traceViewerUrl":"https://trace.playwright.dev/?trace={traceUrl}","mermaid":null,"groupOptions":null,"tags":{"smoke":{"value":2},"critical":{"value":2}},"summary":{"tests":{"name":"Tests","value":32,"nav":true,"id":"tests"},"failed":{"name":"Failed","value":6,"color":"#d00","nav":true,"id":"failed","percent":"18.8%"},"flaky":{"name":"Flaky","value":0,"color":"orange","nav":true,"id":"flaky","percent":"0.0%"},"skipped":{"name":"Skipped","value":0,"color":"gray","nav":true,"id":"skipped","percent":"0.0%"},"passed":{"name":"Passed","value":26,"color":"green","nav":true,"id":"passed","percent":"81.3%"},"steps":{"name":"Steps","value":831,"id":"steps"},"suites":{"name":"Suites","value":13,"id":"suites"},"projects":{"name":"Projects","description":"Suite type is project","value":1,"id":"projects"},"files":{"name":"Files","description":"Suite type is file","value":3,"id":"files"},"describes":{"name":"Describes","description":"Suite type is describe","value":12,"id":"describes"},"shards":{"name":"Shards","description":"Suite type is shard (only in shading mode)","value":0,"id":"shards"},"errors":{"name":"Errors","icon":"error","value":12,"id":"errors"},"retries":{"name":"Retries","icon":"retry","value":6,"id":"retries"},"logs":{"name":"Logs","icon":"log","value":0,"id":"logs"},"attachments":{"name":"Attachments","icon":"attachment","value":36,"id":"attachments"},"artifacts":{"name":"Artifacts","value":0}},"pieChart":{"ns":"mcr-pie","width":360,"height":150,"margin":10,"svg":"<svg viewBox=\"0 0 360 150\" width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\"><g class=\"mcr-pie-path-failed\"><path d=\"M75,75 L75,10 A65,65 0 0 1 135.1,50.3 z\" fill=\"#d00\" opacity=\"0.8\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"5.6,-8.3\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g class=\"mcr-pie-path-flaky\"><path d=\"\" fill=\"orange\" opacity=\"0.8\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"9.3,-3.8\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g class=\"mcr-pie-path-skipped\"><path d=\"\" fill=\"gray\" opacity=\"0.8\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"9.3,-3.8\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g class=\"mcr-pie-path-passed\"><path d=\"M75,75 L135.1,50.3 A65,65 0 1 1 75.4,10 z\" fill=\"green\" opacity=\"0.8\" /><animateTransform from=\"0,0\" to=\"0,0\" pos=\"-5.6,8.3\" attributeName=\"transform\" type=\"translate\" dur=\"0.2s\" fill=\"freeze\" repeatCount=\"1\" restart=\"always\" /></g><g transform=\"translate(160 15)\"><g class=\"mcr-pie-legend-failed\" transform=\"translate(0 0)\"><circle cx=\"10\" cy=\"15\" r=\"10\" fill=\"#d00\" opacity=\"0.8\" /><text x=\"30\" y=\"15\" alignment-baseline=\"middle\">Failed</text><text x=\"115\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"middle\">6</text><text x=\"190\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"end\">18.8%</text></g><g class=\"mcr-pie-legend-flaky\" transform=\"translate(0 30)\"><circle cx=\"10\" cy=\"15\" r=\"10\" fill=\"orange\" opacity=\"0.8\" /><text x=\"30\" y=\"15\" alignment-baseline=\"middle\">Flaky</text><text x=\"115\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"middle\">0</text><text x=\"190\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"end\">0.0%</text></g><g class=\"mcr-pie-legend-skipped\" transform=\"translate(0 60)\"><circle cx=\"10\" cy=\"15\" r=\"10\" fill=\"gray\" opacity=\"0.8\" /><text x=\"30\" y=\"15\" alignment-baseline=\"middle\">Skipped</text><text x=\"115\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"middle\">0</text><text x=\"190\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"end\">0.0%</text></g><g class=\"mcr-pie-legend-passed\" transform=\"translate(0 90)\"><circle cx=\"10\" cy=\"15\" r=\"10\" fill=\"green\" opacity=\"0.8\" /><text x=\"30\" y=\"15\" alignment-baseline=\"middle\">Passed</text><text x=\"115\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"middle\">26</text><text x=\"190\" y=\"15\" alignment-baseline=\"middle\" text-anchor=\"end\">81.3%</text></g></g></svg>"},"htmlPath":"monocart-report/index.html"}
